{"version":3,"sources":["redux/action/api/api.ts","redux/action/overview-actions.ts","redux/action/utils.ts","redux/action/root-action.ts","redux/state/root-state.ts","components/AdjustWeightModal.tsx","components/HistoryLink.tsx","components/SimilaritiesBar.tsx","components/TitleBox.tsx","components/PapersTabularView.tsx","components/SearchBox.tsx","stopwords.ts","utils.ts","components/KeywordsBarChart.jsx","components/KeywordsBarChartContainer.tsx","components/SeedPapersScatterplot.jsx","components/SeedPapersScatterplotContainer.tsx","components/SummaryView.tsx","components/Overview.tsx","App.tsx","serviceWorker.ts","redux/reducer/overview-reducers.ts","redux/reducer/root-reducer.ts","index.tsx"],"names":["a","Axios","get","r","Object","entries","data","map","doi","entry","filter","title","length","unitActions","setKeywords","createAction","keywords","setSeedPapers","seedPapers","setMarkedPapers","markedPapers","setHistories","histories","setWeights","weights","selectHistory","history","thunkActions","getData","fetchType","completeType","describer","fetch","fetchPayload","complete","completePayload","thunk","args","dispatch","request","response","makeThunk","actionOverview","useThunkDispatch","useDispatch","useRootSelector","selector","useSelector","AdjustWeightModal","onClose","useState","state","overview","Box","direction","pad","Grid","columns","gap","type","value","keywordSimilarity","maxVal","onChange","e","target","components","i","keyword","weight","style","paddingLeft","marginLeft","x","_i","seedPaperSimilarity","whiteSpace","textOverflow","overflow","referencedBySeedPapers","referencesSeedPapers","fill","justify","margin","top","Button","primary","color","label","onClick","HistoryLink","fromEntries","toEntries","markedEntries","setMarkedEntries","offsetHeight","cellHeight","onSelect","svgHeight","root","useRef","useEffect","console","log","d3","current","select","selectAll","join","classed","attr","d","svgWidth","me","includes","on","event","concat","handleCellClick","_root","_lineData","forEach","te","ti","fi","findIndex","fe","push","fromIndex","fromDoi","toIndex","toDoi","handleLinkClick","ref","width","className","height","SimilaritiesBar","similarities","maxOfSum","container","setWidth","setHeight","useLayoutEffect","getBoundingClientRect","display","justifyContent","sim","marginTop","backgroundColor","Math","min","TitleBox","show","setShow","Layer","onEsc","onClickOutside","Table","TableBody","TableRow","TableCell","scope","year","abstract","PapersTabularView","numHistories","paperEntries","slice","newMarked","showWeightModal","setShowWeightModal","Card","background","vertical","CardHeader","align","Heading","level","CardBody","Array","_","historyBefore","historyAfter","rows","horizontal","p","numReferencing","numReferenced","keywordSims","seedPaperSims","SearchBox","currentKeyword","setCurrentKeyword","Form","onSubmit","TextInput","List","primaryKey","item","left","right","bottom","key","Text","size","icon","hoverIndicator","k","minWidth","CardFooter","stopwords","Set","split","values","reduce","b","max","y","extractKeywords","content","word","toLowerCase","replace","has","KeywordsBarChart","wordCounts","userInputKeywords","maxCount","count","isSelected","barHeight","index","KeywordsBarChartContainer","useMemo","sort","find","overflowY","SeedPapersScatterplot","xLabel","yLabel","xThreshold","yThreshold","papers","remove","svg","append","domain","paper","range","yAxisTicks","ticks","tick","Number","isInteger","yAxis","tickValues","tickFormat","xAxisTicks","xAxis","call","enter","SeedPapersScatterplotContainer","SummaryView","Overview","App","Boolean","window","location","hostname","match","defaultOverviewState","seedPaperSimsCache","updateSortedPaperEntries","updateKeywordSims","updateSeedPaperSims","updated","newEntry","seed","union","intersection","w","add","referencedBy","referencing","keywordSimsMaxOfSum","withoutSeedPapers","seedPaperSimsMaxOfSum","referencedBySeedPapersMaxOfSum","referencesSeedPapersMaxOfSum","normalized","referencsySeedPapers","inner","as","bs","acc","score","comp","rootReducer","combineReducers","action","getType","payload","referenced_by","nextState","floor","store","createStore","applyMiddleware","thunkMiddleware","createLogger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5530e189.chunk.js","sourcesContent":["import Axios from \"axios\";\nimport { PaperEntry } from \"../../state/overview\";\n\nexport async function getData() {\n  const r = await Axios.get(\"data.json\");\n  return Object.entries(r.data)\n    .map(([doi, entry]: [string, any]) => ({\n      ...entry,\n      doi,\n    }))\n    .filter((entry) => entry.title.length) as PaperEntry[];\n}\n\n// const baseUrl = process.env.REACT_APP_BASEURL || \"http://localhost:8998/\";\n\n// export async function getQuery(issueQueryId: number) {\n//   const r = await Axios.get<IssueQuery>(baseUrl + `query/${issueQueryId}`);\n//   return r.data;\n// }\n\n// export async function postQuery(description: string) {\n//   console.log(process.env);\n//   console.log(\"baseUrl: \" + baseUrl);\n//   const r = await Axios.post<IssueQuery>(baseUrl + \"query/\", {\n//     description,\n//   });\n//   return r.data;\n// }\n","import { createAction } from \"typesafe-actions\";\nimport { OverviewState, PaperEntry, Weights } from \"../state/overview\";\nimport { getData } from \"./api/api\";\nimport { makeThunk } from \"./utils\";\n\nconst unitActions = {\n  setKeywords: createAction(\n    \"OVERVIEW/SET_KEYWORDS\",\n    (keywords: string[]) => keywords\n  )(),\n  setSeedPapers: createAction(\n    \"OVERVIEW/SET_SEED_PAPERS\",\n    (seedPapers: PaperEntry[]) => seedPapers\n  )(),\n  setMarkedPapers: createAction(\n    \"OVERVIEW/SET_MARKED_PAPERS\",\n    (markedPapers: PaperEntry[]) => markedPapers\n  )(),\n  setHistories: createAction(\n    \"OVERVIEW/SET_HISTORIES\",\n    (histories: OverviewState[]) => histories\n  )(),\n  setWeights: createAction(\n    \"OVERVIEW/SET_WEIGHTS\",\n    (weights: Weights) => weights\n  )(),\n  selectHistory: createAction(\n    \"OVERVIEW/SELECT_HISTORY\",\n    (history: OverviewState) => history\n  )(),\n};\n\nconst thunkActions = {\n  getData: makeThunk(\n    \"OVERVIEW/GET_DATA/fetch\",\n    \"OVERVIEW/GET_DATA/complete\",\n    () => ({\n      request: {},\n      response: () => getData(),\n    })\n  ),\n};\n\ntype ThunkActionObject = typeof thunkActions;\ntype UnitActionObject = typeof unitActions;\ntype ThunkAction = ThunkActionObject[keyof ThunkActionObject];\ntype UnitAction = UnitActionObject[keyof UnitActionObject];\n\nexport const actionOverview = { ...thunkActions, ...unitActions };\nexport type OverviewActionReducible = ReturnType<\n  ThunkAction[\"fetch\"] | ThunkAction[\"complete\"] | UnitAction\n>;\nexport type OverviewActionDispatchable = ReturnType<\n  ThunkAction[\"thunk\"] | UnitAction\n>;\n","import { createAction } from \"typesafe-actions\";\nimport { Dispatch } from \"react\";\n\nexport function makeThunk<\n  FetchType extends string,\n  CompleteType extends string,\n  FetchPayload,\n  CompletePayload,\n  Args extends any[]\n>(\n  fetchType: FetchType,\n  completeType: CompleteType,\n  describer: (\n    ...args: Args\n  ) => {\n    request: FetchPayload;\n    response: () => Promise<CompletePayload>;\n  }\n) {\n  const fetch = createAction(\n    fetchType,\n    (fetchPayload: FetchPayload) => fetchPayload\n  )();\n\n  const complete = createAction(\n    completeType,\n    (completePayload: CompletePayload, fetchPayload: FetchPayload) =>\n      completePayload,\n    (completePayload: CompletePayload, fetchPayload: FetchPayload) =>\n      fetchPayload\n  )();\n\n  const thunk = (...args: Args) => async (dispatch: Dispatch<any>) => {\n    const { request, response } = describer(...args);\n    dispatch(fetch(request));\n    dispatch(complete(await response(), request));\n  };\n\n  return { fetch, complete, thunk };\n}\n","import { Dispatch } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  OverviewActionDispatchable,\n  OverviewActionReducible,\n} from \"./overview-actions\";\n\nexport type ReducibleAction = OverviewActionReducible;\n\nexport type DispatchableAction = OverviewActionDispatchable;\n\ntype CustomDispatch = Dispatch<DispatchableAction>;\nexport const useThunkDispatch = () => useDispatch<CustomDispatch>();\n","import { useSelector } from \"react-redux\";\nimport { OverviewState } from \"./overview\";\n\nexport interface RootState {\n  overview: OverviewState;\n}\n\nexport function useRootSelector<T>(selector: (state: RootState) => T): T {\n  return useSelector(selector);\n}\n","import { Box, Button, Grid } from \"grommet\";\nimport React, { useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\n\ninterface Props {\n  onClose: () => any;\n}\n\nconst AdjustWeightModal: React.FC<Props> = ({ onClose }) => {\n  const [weights, setWeights] = useState(\n    useRootSelector((state) => state.overview.weights)\n  );\n  const dispatch = useThunkDispatch();\n  return (\n    <Box direction=\"column\" pad=\"medium\">\n      <Grid columns={[\"1fr\", \"1fr\"]} gap=\"small\">\n        <div>Keyword Similarities</div>\n        <input\n          type=\"number\"\n          value={weights.keywordSimilarity.maxVal}\n          onChange={(e) =>\n            setWeights({\n              ...weights,\n              keywordSimilarity: {\n                ...weights.keywordSimilarity,\n                maxVal: +e.target.value,\n              },\n            })\n          }\n        />\n        {weights.keywordSimilarity.components.map(({ keyword, weight }, i) => (\n          <>\n            <div style={{ paddingLeft: 40 }}>{keyword}</div>\n            <input\n              style={{ marginLeft: 40 }}\n              value={weight}\n              onChange={(e) =>\n                setWeights({\n                  ...weights,\n                  keywordSimilarity: {\n                    ...weights.keywordSimilarity,\n                    components: weights.keywordSimilarity.components.map(\n                      (x, _i) =>\n                        i !== _i\n                          ? x\n                          : {\n                              ...x,\n                              weight: +e.target.value,\n                            }\n                    ),\n                  },\n                })\n              }\n            />\n          </>\n        ))}\n\n        <div>Seed paper Similarities</div>\n        <input\n          type=\"number\"\n          value={weights.seedPaperSimilarity.maxVal}\n          onChange={(e) =>\n            setWeights({\n              ...weights,\n              seedPaperSimilarity: {\n                ...weights.seedPaperSimilarity,\n                maxVal: +e.target.value,\n              },\n            })\n          }\n        />\n        {weights.seedPaperSimilarity.components.map(({ entry, weight }, i) => (\n          <>\n            <div\n              style={{\n                paddingLeft: 40,\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\",\n              }}\n            >\n              {entry.title}\n            </div>\n            <input\n              style={{ marginLeft: 40 }}\n              value={weight}\n              onChange={(e) =>\n                setWeights({\n                  ...weights,\n                  seedPaperSimilarity: {\n                    ...weights.seedPaperSimilarity,\n                    components: weights.seedPaperSimilarity.components.map(\n                      (x, _i) =>\n                        i !== _i\n                          ? x\n                          : {\n                              ...x,\n                              weight: +e.target.value,\n                            }\n                    ),\n                  },\n                })\n              }\n            />\n          </>\n        ))}\n\n        <div>Referenced by Seed papers</div>\n        <input\n          type=\"number\"\n          value={weights.referencedBySeedPapers.maxVal}\n          onChange={(e) =>\n            setWeights({\n              ...weights,\n              referencedBySeedPapers: {\n                ...weights.referencedBySeedPapers,\n                maxVal: +e.target.value,\n              },\n            })\n          }\n        />\n        {weights.referencedBySeedPapers.components.map(\n          ({ entry, weight }, i) => (\n            <>\n              <div\n                style={{\n                  paddingLeft: 40,\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                }}\n              >\n                {entry.title}\n              </div>\n              <input\n                style={{ marginLeft: 40 }}\n                value={weight}\n                onChange={(e) =>\n                  setWeights({\n                    ...weights,\n                    referencedBySeedPapers: {\n                      ...weights.referencedBySeedPapers,\n                      components: weights.referencedBySeedPapers.components.map(\n                        (x, _i) =>\n                          i !== _i\n                            ? x\n                            : {\n                                ...x,\n                                weight: +e.target.value,\n                              }\n                      ),\n                    },\n                  })\n                }\n              />\n            </>\n          )\n        )}\n\n        <div>References Seed papers</div>\n        <input\n          type=\"number\"\n          value={weights.referencesSeedPapers.maxVal}\n          onChange={(e) =>\n            setWeights({\n              ...weights,\n              referencesSeedPapers: {\n                ...weights.referencesSeedPapers,\n                maxVal: +e.target.value,\n              },\n            })\n          }\n        />\n        {weights.referencesSeedPapers.components.map(({ entry, weight }, i) => (\n          <>\n            <div\n              style={{\n                paddingLeft: 40,\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\",\n              }}\n            >\n              {entry.title}\n            </div>\n            <input\n              style={{ marginLeft: 40 }}\n              value={weight}\n              onChange={(e) =>\n                setWeights({\n                  ...weights,\n                  referencesSeedPapers: {\n                    ...weights.referencesSeedPapers,\n                    components: weights.referencesSeedPapers.components.map(\n                      (x, _i) =>\n                        i !== _i\n                          ? x\n                          : {\n                              ...x,\n                              weight: +e.target.value,\n                            }\n                    ),\n                  },\n                })\n              }\n            />\n          </>\n        ))}\n      </Grid>\n      <Box fill={true} justify=\"center\" margin={{ top: \"small\" }}>\n        <Button\n          primary\n          color=\"dark-2\"\n          label=\"Apply\"\n          onClick={() => {\n            dispatch(actionOverview.setWeights(weights));\n            onClose();\n          }}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default AdjustWeightModal;\n","import { Box } from 'grommet'\nimport React, { useRef, useEffect, useState, Ref } from 'react'\nimport { PaperEntry } from '../redux/state/overview'\nimport * as d3 from 'd3'\n\ninterface Props {\n    fromEntries: PaperEntry[]\n    toEntries: PaperEntry[]\n    markedEntries: PaperEntry[]\n    setMarkedEntries: (entry: PaperEntry[]) => any\n    offsetHeight: number\n    cellHeight: number\n    onSelect: () => any\n}\n\ninterface HistoryLine {\n    fromIndex: number\n    fromDoi: string\n    toIndex: number\n    toDoi: string\n}\n\nfunction translate(x: number, y: number) {\n    return `translate(${x}, ${y})`\n}\n\nconst HistoryLink: React.FC<Props> = ({\n    fromEntries,\n    toEntries,\n    markedEntries,\n    setMarkedEntries,\n    offsetHeight,\n    cellHeight,\n    onSelect,\n}) => {\n    const svgHeight: number = cellHeight * 100\n    const svgWidth: number = 200\n    const root = useRef<HTMLDivElement>(null)\n    let selectHistory = () => {\n      onSelect()\n    }\n\n    let handleCellClick = (event: any, d: any) => {\n        if (markedEntries.map((me) => me.doi).includes(d.doi)) {\n            setMarkedEntries(markedEntries.filter((me) => d.doi !== me.doi))\n        } else {\n            setMarkedEntries(markedEntries.concat([d]))\n        }\n    }\n\n    let handleLinkClick = (event: any, d: any) => {\n        const entry: PaperEntry = toEntries.filter(\n            (te) => te.doi === d.toDoi\n        )[0]\n        if (markedEntries.map((me) => me.doi).includes(entry.doi)) {\n            setMarkedEntries(markedEntries.filter((me) => entry.doi !== me.doi))\n        } else {\n            setMarkedEntries(markedEntries.concat([entry]))\n        }\n    }\n\n    let handleCellMouseover = (event: any, d: any) => {\n        let _root = d3.select(root.current).select('svg').select('.history')\n        _root\n            .selectAll('.cell-history')\n            .filter((dd: any) => dd.doi === d.doi)\n            .classed('hovered', true)\n            .attr('fill', 'green')\n            .raise()\n\n        _root\n            .selectAll('.line-history')\n            .filter((dd: any) => dd.toDoi === d.doi)\n            .classed('hovered', true)\n            .attr('stroke', 'green')\n            .raise()\n    }\n\n    let handleLinkMouseover = (event: any, d: any) => {\n        let _root = d3.select(root.current).select('svg').select('.history')\n        _root\n            .selectAll('.cell-history')\n            .filter((dd: any) => dd.doi === d.toDoi)\n            .classed('hovered', true)\n            .attr('fill', 'green')\n            .raise()\n\n        _root\n            .selectAll('.line-history')\n            .filter((dd: any) => dd.toDoi === d.toDoi)\n            .classed('hovered', true)\n            .attr('stroke', 'green')\n            .raise()\n    }\n\n    let handleMouseout = (event: any, d: any) => {\n        let _root = d3.select(root.current).select('svg').select('.history')\n        _root\n            .selectAll('.cell-history')\n            .selectAll('.hovered')\n            .classed('hovered', false)\n            .attr('fill', 'white')\n\n        _root\n            .selectAll('.line-history')\n            .selectAll('.hovered')\n            .classed('hovered', false)\n            .attr('stroke', 'black')\n    }\n\n    useEffect(() => {\n        console.log('cell')\n        let _root = d3.select(root.current).select('svg').select('.history')\n\n        _root\n            .selectAll('.cell-history')\n            .data(fromEntries)\n            .join('rect')\n            .classed('cell-history', true)\n            .attr('x', 0)\n            .attr('y', (d, i) => i * cellHeight)\n            .attr('height', cellHeight*0.8)\n            .attr('width', svgWidth / 4)\n            .attr('stroke', 'black')\n            .attr('stroke-width', 1)\n            .attr('fill', (d: PaperEntry) => \n              markedEntries.map((me) => me.doi).includes(d.doi)\n                    ? 'red'\n                    : 'white'\n            )\n            .on('click', (e, d) => handleCellClick(e, d))\n        //.on('mouseover', (e, d) => handleCellMouseover(e, d))\n        //.on('mouseout', (e, d) => handleMouseout(e, d))\n    }, [fromEntries])\n\n    useEffect(() => {\n        let _root = d3.select(root.current).select('svg').select('.history')\n        let _lineData: HistoryLine[] = []\n        toEntries.forEach((te, ti) => {\n            let fi = fromEntries.findIndex((fe) => fe.doi === te.doi)\n            _lineData.push({\n                fromIndex: fi,\n                fromDoi: fi >= 0 ? fromEntries[fi].doi : '',\n                toIndex: ti,\n                toDoi: te.doi,\n            })\n        })\n\n        _root\n            .selectAll('.line-history')\n            .data(_lineData)\n            .join('line')\n            .classed('line-history', true)\n            .attr('x1', (d: HistoryLine) =>\n                d.fromIndex >= 0 ? svgWidth / 4 : svgWidth * (0.99)\n            )\n            .attr('y1', (d: HistoryLine) =>\n                d.fromIndex >= 0\n                    ? (d.fromIndex + 0.5) * cellHeight\n                    : (d.toIndex + 0.5) * cellHeight\n            )\n            .attr('x2', svgWidth)\n            .attr('y2', (d: HistoryLine) => (d.toIndex + 0.5) * cellHeight)\n            .attr('stroke', (d) =>\n                markedEntries.map((me) => me.doi).includes(d.toDoi)\n                    ? 'red'\n                    : 'black'\n            )\n            .attr('stroke-width', cellHeight * 0.6)\n            .attr('stroke-linecap', 'round')\n            .attr('opacity', (d) =>\n            markedEntries.map((me) => me.doi).includes(d.toDoi)\n                ? 0.5\n                : 0.2\n        )\n            .on('click', (e, d) => handleLinkClick(e, d))\n        //.on('mouseover', (e, d) => handleLinkMouseover(e, d))\n        //.on('mouseout', (e, d) => handleMouseout(e, d))\n    }, [toEntries])\n    /*\n    useEffect(() => {\n        let _root = d3.select(root.current).select('svg').select('.history')\n\n        _root\n            .selectAll('.cell-history')\n            .filter((d: any) => {\n                return markedEntries.map((me) => me.doi).includes(d.doi)\n            })\n            .attr('fill', 'red')\n            .raise()\n\n        _root\n            .selectAll('.line-history')\n            .filter((d: any) => {\n                return markedEntries.map((me) => me.doi).includes(d.toDoi)\n            })\n            .attr('stroke', 'red')\n            .raise()\n    }, [markedEntries])\n    */\n    useEffect(() => {}, [offsetHeight, cellHeight])\n\n    let matchToFrom = (toDoi: string): number => {\n        return fromEntries.findIndex((fe) => fe.doi === toDoi)\n    }\n    return (\n        <div ref={root} style={{ width: svgWidth }}>\n            <div\n                className={'history-header'}\n                style={{ width: svgWidth, height: offsetHeight }}\n            >\n                <button onClick={selectHistory}>Restore</button>\n            </div>\n            <svg height={svgHeight} width={svgWidth}>\n                <g\n                    className={'history'}\n                    height={cellHeight * 100}\n                    width={svgWidth}\n                ></g>\n            </svg>\n        </div>\n    )\n}\n\nexport default HistoryLink\n\n/*\n\n {fromEntries.map((fe, fi) => (\n                        <rect\n                            className={'cell-history'}\n                            width={svgWidth / 4}\n                            height={cellHeight}\n                            x={0}\n                            y={cellHeight * fi}\n                            fill={'white'}\n                            stroke={'black'}\n                            stroke-width={1}\n                        />\n                    ))}\n\n                    {toEntries.map((te, ti) => (\n                        <line\n                            className={'line-history'}\n                            x1={svgWidth}\n                            y1={(ti+0.5)*cellHeight}\n                            x2={svgWidth/4}\n                            y2={(matchToFrom(te.doi)+0.5)*cellHeight}\n                            stroke={'black'}\n                            stroke-width={cellHeight*0.8}\n                            opacity={0.3}\n                        />\n                    ))}\n*/\n","import * as d3 from \"d3\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\n\ninterface Props {\n  similarities: number[];\n  maxOfSum: number;\n}\n\nconst SimilaritiesBar: React.FC<Props> = ({ similarities, maxOfSum }) => {\n  const container = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number | null>(null);\n  const [height, setHeight] = useState<number | null>(null);\n  useLayoutEffect(() => {\n    if (container.current && (!width || !height)) {\n      setWidth(container.current.getBoundingClientRect().width);\n      setHeight(container.current.getBoundingClientRect().height);\n    }\n  });\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      ref={container}\n    >\n      {width &&\n        height &&\n        similarities.map((sim, i) => (\n          <div\n            style={{\n              marginTop: height * 0.25,\n              height: height * 0.5,\n              width: (sim / maxOfSum) * width * 0.8,\n              marginLeft: i ? 0 : (sim / maxOfSum) * width * 0.1,\n              backgroundColor: d3.schemeTableau10[Math.min(9, i)],\n            }}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default SimilaritiesBar;\n","import { Layer, Table, TableBody, TableCell, TableRow } from \"grommet\";\nimport React, { useState } from \"react\";\nimport { PaperEntry } from \"../redux/state/overview\";\n\ninterface Props {\n  entry: PaperEntry;\n}\n\nconst TitleBox: React.FC<Props> = ({ entry }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div\n      onClick={() => {\n        setShow(true);\n      }}\n      style={{\n        textOverflow: \"ellipsis\",\n        overflow: \"hidden\",\n      }}\n    >\n      <strong\n        style={{\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        {entry.title}\n      </strong>\n      {show && (\n        <Layer\n          onEsc={() => setShow(false)}\n          onClickOutside={() => setShow(false)}\n        >\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">Title</TableCell>\n                <TableCell>{entry.title}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Year</TableCell>\n                <TableCell>{entry.year}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Abstract</TableCell>\n                <TableCell>{entry.abstract}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Layer>\n      )}\n    </div>\n  );\n};\n\nexport default TitleBox;\n","import {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Grid,\n  Heading,\n  Layer,\n} from \"grommet\";\nimport React, { useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { PaperEntry } from \"../redux/state/overview\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport AdjustWeightModal from \"./AdjustWeightModal\";\nimport HistoryLink from \"./HistoryLink\";\nimport SimilaritiesBar from \"./SimilaritiesBar\";\nimport TitleBox from \"./TitleBox\";\n\nconst PapersTabularView: React.FC = () => {\n  const histories = useRootSelector((state) => [\n    ...state.overview.histories,\n    state.overview,\n  ]);\n  const numHistories = Math.min(2, histories.length - 1);\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const keywords = useRootSelector((state) => state.overview.keywords);\n  const paperEntries = useRootSelector((state) =>\n    state.overview.paperEntries\n      .filter((entry) => !seedPapers.map((e) => e.doi).includes(entry.doi))\n      .slice(0, 100)\n  );\n  const markedPapers = useRootSelector((state) => state.overview.markedPapers);\n  const weights = useRootSelector((state) => state.overview.weights);\n  const setMarkedPapers = (newMarked: PaperEntry[]) =>\n    dispatch(actionOverview.setMarkedPapers(newMarked));\n\n  const dispatch = useThunkDispatch();\n  const [showWeightModal, setShowWeightModal] = useState(false);\n\n  return (\n    <Card fill={true} background=\"white\" overflow={{ vertical: \"scroll\" }}>\n      <CardHeader pad=\"small\">\n        <Box direction=\"row\" gap=\"small\" align=\"baseline\">\n          <Heading level=\"4\">Papers</Heading>\n          <Button\n            color=\"blue\"\n            onClick={() => {\n              setShowWeightModal(true);\n            }}\n          >\n            Adjust weight\n          </Button>\n          {showWeightModal && (\n            <Layer\n              onEsc={() => setShowWeightModal(false)}\n              onClickOutside={() => setShowWeightModal(false)}\n            >\n              <AdjustWeightModal onClose={() => setShowWeightModal(false)} />\n            </Layer>\n          )}\n        </Box>\n      </CardHeader>\n      <CardBody pad=\"small\" gap=\"small\">\n        <Grid\n          columns={[\n            ...Array(numHistories)\n              .fill(0)\n              .map((_) => \"auto\"),\n            \"1fr\",\n          ]}\n          fill={true}\n        >\n          {Array(numHistories)\n            .fill(0)\n            .map((_, i) => {\n              const historyBefore = histories.slice(\n                -(numHistories - 1 - i + 2)\n              )[0];\n              const historyAfter = histories.slice(\n                -(numHistories - 1 - i + 1)\n              )[0];\n              return (\n                <HistoryLink\n                  fromEntries={historyBefore.paperEntries\n                    .filter(\n                      (entry) =>\n                        !historyBefore.seedPapers\n                          .map((e) => e.doi)\n                          .includes(entry.doi)\n                    )\n                    .slice(0, 100)}\n                  toEntries={historyAfter.paperEntries\n                    .filter(\n                      (entry) =>\n                        !historyAfter.seedPapers\n                          .map((e) => e.doi)\n                          .includes(entry.doi)\n                    )\n                    .slice(0, 100)}\n                  markedEntries={markedPapers}\n                  setMarkedEntries={setMarkedPapers}\n                  onSelect={() => {\n                    dispatch(actionOverview.selectHistory(historyBefore));\n                  }}\n                  offsetHeight={40}\n                  cellHeight={20}\n                />\n              );\n            })}\n          <div>\n            <Grid\n              rows={[\"40px\", ...paperEntries.map((_) => \"20px\")]}\n              columns={[\n                \"auto\",\n                \"4fr\",\n                \"1fr\",\n                \"1fr\",\n                \"1fr\",\n                \"1fr\",\n                \"1fr\",\n                \"1fr\",\n                \"1fr\",\n              ]}\n            >\n              <div></div>\n              <div>Title</div>\n              <div>Year</div>\n              <div># References</div>\n              <div># Referenced</div>\n              <div>Keyword Similarity</div>\n              <div>Seed Paper Similarity</div>\n              <div>Referenced by Seed Papers</div>\n              <div>References Seed Papers</div>\n              {paperEntries &&\n                paperEntries.map((entry, i) => (\n                  <>\n                    <Box\n                      direction=\"row\"\n                      align=\"baseline\"\n                      gap=\"small\"\n                      margin={{ horizontal: \"small\" }}\n                    >\n                      <Button\n                        onClick={() => {\n                          if (!seedPapers.includes(entry)) {\n                            dispatch(\n                              actionOverview.setSeedPapers([\n                                ...seedPapers,\n                                entry,\n                              ])\n                            );\n                          }\n                        }}\n                      >\n                        SEED\n                      </Button>\n                      <Button\n                        style={{\n                          backgroundColor: markedPapers\n                            .map((p) => p.doi)\n                            .includes(entry.doi)\n                            ? \"purple\"\n                            : \"white\",\n                        }}\n                        onClick={() => {\n                          if (\n                            markedPapers.map((p) => p.doi).includes(entry.doi)\n                          ) {\n                            dispatch(\n                              actionOverview.setMarkedPapers(\n                                markedPapers.filter((p) => p.doi !== entry.doi)\n                              )\n                            );\n                          } else {\n                            dispatch(\n                              actionOverview.setMarkedPapers([\n                                ...markedPapers,\n                                entry,\n                              ])\n                            );\n                          }\n                        }}\n                      >\n                        MARK\n                      </Button>\n                    </Box>\n                    <TitleBox entry={entry} />\n                    <div>{entry.year}</div>\n                    <div>{entry.numReferencing}</div>\n                    <div>{entry.numReferenced}</div>\n                    <div>\n                      <SimilaritiesBar\n                        similarities={entry.keywordSims}\n                        maxOfSum={1}\n                      />\n                    </div>\n                    <div>\n                      <SimilaritiesBar\n                        similarities={entry.seedPaperSims}\n                        maxOfSum={1}\n                      />\n                    </div>\n                    <div>\n                      <SimilaritiesBar\n                        similarities={entry.referencedBySeedPapers}\n                        maxOfSum={1}\n                      />\n                    </div>\n                    <div>\n                      <SimilaritiesBar\n                        similarities={entry.referencesSeedPapers}\n                        maxOfSum={1}\n                      />\n                    </div>\n                  </>\n                ))}\n            </Grid>\n          </div>\n        </Grid>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default PapersTabularView;\n","import * as d3 from \"d3\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Form,\n  Heading,\n  List,\n  Text,\n  TextInput,\n} from \"grommet\";\nimport * as Icons from \"grommet-icons\";\nimport React, { useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\n\nconst SearchBox: React.FC = () => {\n  const [currentKeyword, setCurrentKeyword] = useState(\"\");\n  const keywords = useRootSelector((state) => state.overview.keywords);\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const dispatch = useThunkDispatch();\n\n  return (\n    <Card height=\"100%\" width=\"100%\" background=\"white\">\n      <CardHeader pad=\"small\">\n        <Heading level=\"4\">Search Box</Heading>\n      </CardHeader>\n      <CardBody pad=\"small\" gap=\"small\">\n        <Box direction=\"row\" align=\"baseline\" gap=\"small\">\n          <Heading level=\"5\">Keywords</Heading>\n          <Button\n            color=\"blue\"\n            onClick={() => {\n              dispatch(actionOverview.setKeywords([]));\n            }}\n          >\n            clear\n          </Button>\n        </Box>\n        <Form\n          onSubmit={() => {\n            dispatch(actionOverview.setKeywords([...keywords, currentKeyword]));\n            setCurrentKeyword(\"\");\n          }}\n        >\n          <TextInput\n            value={currentKeyword}\n            onChange={(e) => setCurrentKeyword(e.target.value)}\n          />\n          <List\n            data={keywords.map((keyword) => ({ entry: keyword }))}\n            primaryKey={(item) => item.entry}\n            pad={{ left: \"small\", right: \"none\", top: \"none\", bottom: \"none\" }}\n          >\n            {(item: any, i: number) => (\n              <Box\n                key={item.doi}\n                direction=\"row-responsive\"\n                gap=\"medium\"\n                align=\"center\"\n              >\n                <div\n                  style={{\n                    width: 20,\n                    height: 20,\n                    backgroundColor: d3.schemeTableau10[Math.min(i, 9)],\n                  }}\n                />\n                <Text size=\"small\">{item.entry}</Text>\n                <Button\n                  icon={<Icons.Close size=\"small\" />}\n                  hoverIndicator\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setKeywords(\n                        keywords.filter((k) => k !== item.entry)\n                      )\n                    );\n                  }}\n                />\n              </Box>\n            )}\n          </List>\n        </Form>\n        <Box direction=\"row\" align=\"baseline\" gap=\"small\">\n          <Heading level=\"5\">Seed papers</Heading>\n          <Button\n            color=\"blue\"\n            onClick={() => {\n              dispatch(actionOverview.setSeedPapers([]));\n            }}\n          >\n            clear\n          </Button>\n        </Box>\n        <Form onSubmit={() => {}}>\n          <List\n            data={seedPapers.map((entry) => entry)}\n            primaryKey={(entry) => entry.title}\n            pad={{ left: \"small\", right: \"none\", top: \"none\", bottom: \"none\" }}\n          >\n            {(item: any, i: number) => (\n              <Box\n                key={item.doi}\n                direction=\"row-responsive\"\n                gap=\"medium\"\n                align=\"center\"\n              >\n                <div\n                  style={{\n                    width: 20,\n                    minWidth: 20,\n                    height: 20,\n                    backgroundColor: d3.schemeTableau10[Math.min(i, 9)],\n                  }}\n                />\n                <Text size=\"small\">{item.title}</Text>\n                <Button\n                  icon={<Icons.Close size=\"small\" />}\n                  hoverIndicator\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setSeedPapers(\n                        seedPapers.filter((e) => e !== item)\n                      )\n                    );\n                  }}\n                />\n              </Box>\n            )}\n          </List>\n        </Form>\n      </CardBody>\n      <CardFooter\n        pad={{ horizontal: \"small\" }}\n        background=\"light-1\"\n        justify=\"end\"\n      >\n        <Button\n          onClick={() => {}}\n          icon={<Icons.Search color=\"plain\" />}\n          hoverIndicator\n        />\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default SearchBox;\n","export const stopwords = new Set(`a\nable\nabout\nabove\nabst\naccordance\naccording\naccordingly\nacross\nact\nactually\nadded\nadj\naffected\naffecting\naffects\nafter\nafterwards\nagain\nagainst\nah\nall\nalmost\nalone\nalong\nalready\nalso\nalthough\nalways\nam\namong\namongst\nan\nand\nannounce\nanother\nany\nanybody\nanyhow\nanymore\nanyone\nanything\nanyway\nanyways\nanywhere\napparently\napproximately\nare\naren\narent\narise\naround\nas\naside\nask\nasking\nat\nauth\navailable\naway\nawfully\nb\nback\nbe\nbecame\nbecause\nbecome\nbecomes\nbecoming\nbeen\nbefore\nbeforehand\nbegin\nbeginning\nbeginnings\nbegins\nbehind\nbeing\nbelieve\nbelow\nbeside\nbesides\nbetween\nbeyond\nbiol\nboth\nbrief\nbriefly\nbut\nby\nc\nca\ncame\ncan\ncannot\ncan't\ncause\ncauses\ncertain\ncertainly\nco\ncom\ncome\ncomes\ncontain\ncontaining\ncontains\ncould\ncouldnt\nd\ndate\ndid\ndidn't\ndifferent\ndo\ndoes\ndoesn't\ndoing\ndone\ndon't\ndown\ndownwards\ndue\nduring\ne\neach\ned\nedu\neffect\neg\neight\neighty\neither\nelse\nelsewhere\nend\nending\nenough\nespecially\net\net-al\netc\neven\never\nevery\neverybody\neveryone\neverything\neverywhere\nex\nexcept\nf\nfar\nfew\nff\nfifth\nfirst\nfive\nfix\nfollowed\nfollowing\nfollows\nfor\nformer\nformerly\nforth\nfound\nfour\nfrom\nfurther\nfurthermore\ng\ngave\nget\ngets\ngetting\ngive\ngiven\ngives\ngiving\ngo\ngoes\ngone\ngot\ngotten\nh\nhad\nhappens\nhardly\nhas\nhasn't\nhave\nhaven't\nhaving\nhe\nhed\nhence\nher\nhere\nhereafter\nhereby\nherein\nheres\nhereupon\nhers\nherself\nhes\nhi\nhid\nhim\nhimself\nhis\nhither\nhome\nhow\nhowbeit\nhowever\nhundred\ni\nid\nie\nif\ni'll\nim\nimmediate\nimmediately\nimportance\nimportant\nin\ninc\nindeed\nindex\ninformation\ninstead\ninto\ninvention\ninward\nis\nisn't\nit\nitd\nit'll\nits\nitself\ni've\nj\njust\nk\nkeep\tkeeps\nkept\nkg\nkm\nknow\nknown\nknows\nl\nlargely\nlast\nlately\nlater\nlatter\nlatterly\nleast\nless\nlest\nlet\nlets\nlike\nliked\nlikely\nline\nlittle\n'll\nlook\nlooking\nlooks\nltd\nm\nmade\nmainly\nmake\nmakes\nmany\nmay\nmaybe\nme\nmean\nmeans\nmeantime\nmeanwhile\nmerely\nmg\nmight\nmillion\nmiss\nml\nmore\nmoreover\nmost\nmostly\nmr\nmrs\nmuch\nmug\nmust\nmy\nmyself\nn\nna\nname\nnamely\nnay\nnd\nnear\nnearly\nnecessarily\nnecessary\nneed\nneeds\nneither\nnever\nnevertheless\nnew\nnext\nnine\nninety\nno\nnobody\nnon\nnone\nnonetheless\nnoone\nnor\nnormally\nnos\nnot\nnoted\nnothing\nnow\nnowhere\no\nobtain\nobtained\nobviously\nof\noff\noften\noh\nok\nokay\nold\nomitted\non\nonce\none\nones\nonly\nonto\nor\nord\nother\nothers\notherwise\nought\nour\nours\nourselves\nout\noutside\nover\noverall\nowing\nown\np\npage\npages\npart\nparticular\nparticularly\npast\nper\nperhaps\nplaced\nplease\nplus\npoorly\npossible\npossibly\npotentially\npp\npredominantly\npresent\npreviously\nprimarily\nprobably\npromptly\nproud\nprovides\nput\nq\nque\nquickly\nquite\nqv\nr\nran\nrather\nrd\nre\nreadily\nreally\nrecent\nrecently\nref\nrefs\nregarding\nregardless\nregards\nrelated\nrelatively\nresearch\nrespectively\nresulted\nresulting\nresults\nright\nrun\ns\nsaid\nsame\nsaw\nsay\nsaying\nsays\nsec\nsection\nsee\nseeing\nseem\nseemed\nseeming\nseems\nseen\nself\nselves\nsent\nseven\nseveral\nshall\nshe\nshed\nshe'll\nshes\nshould\nshouldn't\nshow\nshowed\nshown\nshowns\nshows\nsignificant\nsignificantly\nsimilar\nsimilarly\nsince\nsix\nslightly\nso\nsome\nsomebody\nsomehow\nsomeone\nsomethan\nsomething\nsometime\nsometimes\nsomewhat\nsomewhere\nsoon\nsorry\nspecifically\nspecified\nspecify\nspecifying\nstill\nstop\nstrongly\nsub\nsubstantially\nsuccessfully\nsuch\nsufficiently\nsuggest\nsup\nsure\tt\ntake\ntaken\ntaking\ntell\ntends\nth\nthan\nthank\nthanks\nthanx\nthat\nthat'll\nthats\nthat've\nthe\ntheir\ntheirs\nthem\nthemselves\nthen\nthence\nthere\nthereafter\nthereby\nthered\ntherefore\ntherein\nthere'll\nthereof\ntherere\ntheres\nthereto\nthereupon\nthere've\nthese\nthey\ntheyd\nthey'll\ntheyre\nthey've\nthink\nthis\nthose\nthou\nthough\nthoughh\nthousand\nthroug\nthrough\nthroughout\nthru\nthus\ntil\ntip\nto\ntogether\ntoo\ntook\ntoward\ntowards\ntried\ntries\ntruly\ntry\ntrying\nts\ntwice\ntwo\nu\nun\nunder\nunfortunately\nunless\nunlike\nunlikely\nuntil\nunto\nup\nupon\nups\nus\nuse\nused\nuseful\nusefully\nusefulness\nuses\nusing\nusually\nv\nvalue\nvarious\n've\nvery\nvia\nviz\nvol\nvols\nvs\nw\nwant\nwants\nwas\nwasnt\nway\nwe\nwed\nwelcome\nwe'll\nwent\nwere\nwerent\nwe've\nwhat\nwhatever\nwhat'll\nwhats\nwhen\nwhence\nwhenever\nwhere\nwhereafter\nwhereas\nwhereby\nwherein\nwheres\nwhereupon\nwherever\nwhether\nwhich\nwhile\nwhim\nwhither\nwho\nwhod\nwhoever\nwhole\nwho'll\nwhom\nwhomever\nwhos\nwhose\nwhy\nwidely\nwilling\nwish\nwith\nwithin\nwithout\nwont\nwords\nworld\nwould\nwouldnt\nwww\nx\ny\nyes\nyet\nyou\nyoud\nyou'll\nyour\nyoure\nyours\nyourself\nyourselves\nyou've\nz\nzero`.split(\"\\n\"));\n","import { stopwords } from \"./stopwords\";\n\nexport function maxOfSum(values: number[][]) {\n  return values.reduce(\n    (a, b) =>\n      Math.max(\n        a,\n        b.reduce((x, y) => x + y, 0)\n      ),\n    0\n  );\n}\n\nexport function extractKeywords(content: string) {\n  return content.split(' ')\n    .map((word) => word.toLowerCase().replace(/[^a-zA-Z\\-]/g, \"\"))\n    .filter((word) => word.length >= 2 && !stopwords.has(word.toLowerCase()))\n}","import * as d3 from \"d3\";\nimport React from \"react\";\n\nconst KeywordsBarChart = ({\n  svgWidth,\n  userInputKeywords,\n  wordCounts,\n  onClick,\n}) => {\n  const maxCount = wordCounts.reduce((a, b) => Math.max(a, b.count), 0);\n  console.log({ maxCount });\n  let defaultColor = \"rgba(128, 128, 128, 0.3)\"\n  let barHeight = 25\n  let padding = 5\n  let textMargin = 15\n  return (\n    <svg width={svgWidth} height={wordCounts.length * barHeight}>\n      {wordCounts.map(({ word, count, isSelected }, i) => {\n        return (\n        <>\n          <rect\n            x={svgWidth / 2}\n            y={i * barHeight}\n            onClick={() => onClick(word)}\n            width={(count / maxCount) * svgWidth * 0.4}\n            height={barHeight - padding}\n            fill={\n              isSelected\n                ? d3.schemeTableau10[\n                    Math.min(9, isSelected.index)\n                  ]\n                : defaultColor\n            }\n          />\n          <text x={0} y={i * barHeight + textMargin}>\n            {word}\n          </text>\n        </>\n      )})}\n    </svg>\n  );\n};\n\nexport default KeywordsBarChart;\n","import React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport { extractKeywords } from \"../utils\";\nimport KeywordsBarChart from \"./KeywordsBarChart\";\n\ninterface Props {}\n\nconst KeywordsBarChartContainer: React.FC<Props> = () => {\n  const dispatch = useThunkDispatch();\n  const userInputKeywords = useRootSelector((state) => state.overview.keywords);\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const wordCounts = useMemo(() => {\n    const count = {} as { [word: string]: number };\n    seedPapers.forEach((entry) => {\n      extractKeywords(entry.title + \" \" + entry.abstract).forEach((word) =>\n        count[word] ? (count[word] += 1) : (count[word] = 1)\n      );\n      entry.keywords.forEach((word) =>\n        count[word] ? (count[word] += 1) : (count[word] = 1)\n      );\n      entry.title\n        .split(\" \")\n        .forEach((word) =>\n          count[word] ? (count[word] += 1) : (count[word] = 1)\n        );\n    });\n    return Object.entries(count)\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, 50)\n      .map(([word, count]) => ({\n        word,\n        count,\n        isSelected: userInputKeywords\n          .map((keyword, index) => ({ keyword, index }))\n          .find(({keyword, index}) => keyword.split(\" \").includes(word))\n      }));\n  }, [userInputKeywords, seedPapers]);\n  console.log({ wordCounts });\n  const container = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number | null>(null);\n  useLayoutEffect(() => {\n    if (container.current && !width) {\n      setWidth(container.current.getBoundingClientRect().width);\n    }\n  });\n  return (\n    <div\n      style={{ height: \"100%\", width: \"100%\", overflowY: \"scroll\" }}\n      ref={container}\n    >\n      {width && (\n        <KeywordsBarChart\n          svgWidth={width * 0.9}\n          userInputKeywords={userInputKeywords}\n          wordCounts={wordCounts}\n          onClick={(keyword: string) => {\n            if (userInputKeywords.includes(keyword)) {\n              dispatch(\n                actionOverview.setKeywords(\n                  userInputKeywords.filter((k) => k !== keyword)\n                )\n              );\n            } else {\n              dispatch(\n                actionOverview.setKeywords([...userInputKeywords, keyword])\n              );\n            }\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default KeywordsBarChartContainer;\n","import * as d3 from \"d3\";\nimport React, { useEffect, useRef } from \"react\";\n\nconst SeedPapersScatterplot = ({\n  svgWidth,\n  svgHeight,\n  seedPapers,\n  markedPapers,\n  xLabel,\n  yLabel,\n  xThreshold,\n  yThreshold,\n  onClick,\n}) => {\n  const papers = [...seedPapers, ...markedPapers];\n  // console.log(svgHeight)\n  // console.log(seedPapers, markedPapers)\n  // console.log(\"THRESHOLD: \", xThreshold, yThreshold)\n  // console.log(seedPapers.map((item) => item[xLabel]), seedPapers.map((item) => item[yLabel]))\n  // console.log(markedPapers.map((item) => item[xLabel]), markedPapers.map((item) => item[yLabel]))\n\n\n  let margin = { top: 10, bottom: 20, left: 40, right: 10 }\n  let height = svgHeight - margin.top - margin.bottom\n  let width = svgWidth - margin.left - margin.right\n  const container = useRef(null);\n\n  useEffect(() => {\n    d3.select('.seed-scatter').selectAll('*').remove()\n\n    let svg = d3.select('.seed-scatter')\n      .append('svg')\n      .attr('width', svgWidth)\n      .attr('height', svgHeight)\n      .append('g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n    let y = d3\n      .scaleLinear()\n      .domain(d3.extent(papers.map((paper) => paper[yLabel])))\n      .range([height, 0]);\n      \n    let x = d3\n      .scaleLinear()\n      .domain(d3.extent(papers.map((paper) => paper[xLabel])))\n      .range([0, width]);\n\n      const yAxisTicks = y.ticks()\n    .filter(tick => Number.isInteger(tick));\n      const yAxis = d3.axisLeft(y)\n    .tickValues(yAxisTicks)\n    .tickFormat(d3.format('d'));\n\n    const xAxisTicks = x.ticks()\n    .filter(tick => Number.isInteger(tick));\n      const xAxis = d3.axisBottom(x)\n    .tickValues(xAxisTicks)\n    .tickFormat(d3.format('d'));\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    svg\n      .append(\"g\")\n      .call(yAxis);\n\n    if(xThreshold != null){\n      svg.append('line')\n      .style('stroke', 'gray')\n      .style('stroke-width', 1)\n      .attr('x1', x(xThreshold))\n      .attr('y1', 0)\n      .attr('x2', x(xThreshold))\n      .attr('y2', height)\n      .style('opacity', 0.5)\n    }\n\n    if(yThreshold != null && (seedPapers.length != 0 || markedPapers.length != 0)){\n      svg.append('line')\n      .style('stroke', 'gray')\n      .style('stroke-width', 1)\n      .attr('x1', 0)\n      .attr('y1', y(yThreshold))\n      .attr('x2', width)\n      .attr('y2', y(yThreshold))\n      .style('opacity', 0.5)\n\n    }\n\n\n    let seedCircle = svg.selectAll('circle')\n      .data(seedPapers)\n\n    seedCircle.enter()\n      .append('circle')\n      .attr('fill', 'red')\n      .attr('cx', d => x(d[xLabel]))\n      .attr('cy', d => y(d[yLabel]))\n      .attr('r', 3)\n      .style('opacity', d => {\n        if (y(d[yLabel]) <= y(yThreshold)){\n          return 1;\n        }\n        else return 0.5;\n      }\n      )\n      .on('click', d => onClick(d))\n\n\n    let markedCircle = svg.selectAll('circle')\n      .data(markedPapers)\n\n    markedCircle.enter()\n      .append('circle')\n      .attr('fill', 'blue')\n      .attr('cx', d => x(d[xLabel]))\n      .attr('cy', d => y(d[yLabel]))\n      .attr('r', 3)\n      .style('opacity', d => {\n        if (y(d[yLabel]) <= y(yThreshold)){\n          return 1;\n        }\n        else return 0.5;\n      })\n      .on('click', d => onClick(d))\n\n\n  }, [seedPapers, markedPapers])\n\n\n  const y = d3\n    .scaleLinear()\n    .domain(d3.extent(papers.map((paper) => paper[yLabel])))\n    .range([0, svgHeight]);\n  const x = d3\n    .scaleLinear()\n    .domain(d3.extent(papers.map((paper) => paper[xLabel])))\n    .range([0, svgWidth]);\n  return (\n    <>\n      <div className='seed-scatter'></div>\n      {/* <svg style={{ width: svgWidth, height: svgHeight }}>\n      {seedPapers.map((paper) => (\n        <circle\n          key={paper.doi}\n          cx={x(paper[xLabel])}\n          cy={y(paper[yLabel])}\n          r={10}\n          fill=\"blue\"\n          onClick={() => onClick(paper)}\n        />\n      ))}\n      {markedPapers.map((paper) => (\n        <circle\n          key={paper.doi}\n          cx={x(paper[xLabel])}\n          cy={y(paper[yLabel])}\n          r={10}\n          fill=\"red\"\n          onClick={() => onClick(paper)}\n        />\n      ))}\n    </svg> */}\n    </>\n  );\n};\n\nexport default SeedPapersScatterplot;\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport SeedPapersScatterplot from \"./SeedPapersScatterplot\";\n\nconst SeedPapersScatterplotContainer: React.FC = () => {\n  const dispatch = useThunkDispatch();\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const markedPapers = useRootSelector((state) => state.overview.markedPapers);\n  console.log({ markedPapers })\n  const container = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number | null>(null);\n  const [height, setHeight] = useState<number | null>(null);\n  useLayoutEffect(() => {\n    if (container.current && (!width || !height)) {\n      setWidth(container.current.getBoundingClientRect().width);\n      setHeight(container.current.getBoundingClientRect().height);\n    }\n  });\n  return (\n    <div\n      style={{ height: \"100%\", width: \"100%\" }}\n      ref={container}\n    >\n      {width && height && (\n        <SeedPapersScatterplot\n          seedPapers={seedPapers}\n          markedPapers={markedPapers}\n          svgWidth={width * 0.9}\n          svgHeight={height * 0.9}\n          onClick={() => {}}\n          xLabel=\"score\"\n          yLabel=\"year\" \n          xThreshold={null}\n          yThreshold={2017}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SeedPapersScatterplotContainer;\n","import {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Heading,\n} from \"grommet\";\nimport * as Icons from \"grommet-icons\";\nimport React from \"react\";\nimport KeywordsBarChartContainer from \"./KeywordsBarChartContainer\";\nimport SeedPapersScatterplotContainer from \"./SeedPapersScatterplotContainer\";\n\nconst SummaryView: React.FC = () => {\n  return (\n    <Card height=\"100%\" width=\"100%\" background=\"white\">\n      <CardHeader pad=\"small\">\n        <Heading level=\"4\">Summary</Heading>\n      </CardHeader>\n      <CardBody pad=\"small\" gap=\"small\">\n        <Heading level=\"5\">Keywords</Heading>\n        <KeywordsBarChartContainer />\n        <Heading level=\"5\">Seed papers</Heading>\n        <SeedPapersScatterplotContainer />\n      </CardBody>\n      <CardFooter\n        pad={{ horizontal: \"small\" }}\n        background=\"light-1\"\n        justify=\"end\"\n      >\n        <Button\n          onClick={() => {}}\n          icon={<Icons.Search color=\"plain\" />}\n          hoverIndicator\n        />\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default SummaryView;\n","import { Box, Grid } from \"grommet\";\nimport React from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport PapersTabularView from \"./PapersTabularView\";\nimport SearchBox from \"./SearchBox\";\nimport SummaryView from \"./SummaryView\";\n\nconst Overview: React.FC = () => {\n  const paperEntries = useRootSelector(state => state.overview.paperEntries)\n  const dispatch = useThunkDispatch();\n  if (!paperEntries.length) {\n    dispatch(actionOverview.getData.thunk())\n  }\n  console.log({ data: paperEntries })\n  return (\n    <Grid fill={true} columns={[\"2fr\", \"10fr\", \"2fr\"]}>\n      <Box fill={true}>\n        <SearchBox />\n      </Box>\n      <Box fill={true}>\n        <PapersTabularView />\n      </Box>\n      <Box fill={true}>\n        <SummaryView />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Overview;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Overview from \"./components/Overview\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <Overview />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as d3 from \"d3\";\nimport { getType } from \"typesafe-actions\";\nimport { extractKeywords, maxOfSum } from \"../../utils\";\nimport { actionOverview } from \"../action/overview-actions\";\nimport { ReducibleAction } from \"../action/root-action\";\nimport { OverviewState, PaperEntry } from \"../state/overview\";\n\nconst defaultOverviewState: OverviewState = {\n  paperEntries: [],\n  keywords: [],\n  seedPapers: [],\n  markedPapers: [],\n  histories: [],\n  seedPaperSimsCache: {},\n  weights: {\n    keywordSimilarity: {\n      maxVal: 1,\n      components: [],\n    },\n    referencedBySeedPapers: {\n      maxVal: 1,\n      components: [],\n    },\n    referencesSeedPapers: {\n      maxVal: 1,\n      components: [],\n    },\n    seedPaperSimilarity: {\n      maxVal: 1,\n      components: [],\n    },\n  },\n};\n\nfunction updateSortedPaperEntries(\n  state: OverviewState,\n  updateKeywordSims: boolean,\n  updateSeedPaperSims: boolean\n) {\n  const updated = state.paperEntries.map((entry) => {\n    const seedPaperSimsCache = state.seedPaperSimsCache; // going to mutate it as it's cache\n    let newEntry = { ...entry };\n    if (updateKeywordSims) {\n      const keywordSims = state.keywords.map(\n        keyword => keyword.split(' ').map(word => (\n          (entry.title + entry.abstract)\n            .toLowerCase()\n            .split(word.toLowerCase()).length - 1\n        )).reduce((a, b) => a + b)\n      );\n      newEntry = { ...newEntry, keywordSims };\n    }\n    if (updateSeedPaperSims) {\n      const seedPaperSims = state.seedPapers.map((seed) => {\n        if (!(seed.doi in seedPaperSimsCache)) {\n          seedPaperSimsCache[seed.doi] = {};\n        }\n        if (!seedPaperSimsCache[seed.doi][entry.doi]) {\n          const a = new Set(\n            extractKeywords(entry.title + \" \" + entry.abstract)\n          );\n          const b = new Set(extractKeywords(seed.title + \" \" + seed.abstract));\n          const [union, intersection] = [\n            new Set<string>([]),\n            new Set<string>([]),\n          ];\n          a.forEach((w) => union.add(w));\n          b.forEach((w) => union.add(w));\n          a.forEach((w) => b.has(w) && intersection.add(w));\n          seedPaperSimsCache[seed.doi][entry.doi] =\n            intersection.size / union.size;\n        }\n        return seedPaperSimsCache[seed.doi][entry.doi];\n      });\n      const referencedBySeedPapers = state.seedPapers.map((seed) => {\n        return newEntry.referencedBy.includes(seed.doi) ? 1 : 0;\n      });\n      const referencesSeedPapers = state.seedPapers.map((seed) => {\n        return newEntry.referencing.includes(seed.doi) ? 1 : 0;\n      });\n      newEntry = {\n        ...newEntry,\n        seedPaperSims,\n        referencedBySeedPapers,\n        referencesSeedPapers,\n      };\n    }\n    return newEntry;\n  });\n\n  const keywordSimsMaxOfSum = maxOfSum(\n    updated.map((entry) => entry.keywordSims)\n  );\n  const withoutSeedPapers = updated\n      .filter(\n        (entry) => !state.seedPapers.map((d) => d.doi).includes(entry.doi)\n      )\n  const seedPaperSimsMaxOfSum = maxOfSum(\n    withoutSeedPapers.map((entry) => entry.seedPaperSims)\n  );\n  const referencedBySeedPapersMaxOfSum = maxOfSum(\n    withoutSeedPapers.map((entry) => entry.referencedBySeedPapers)\n  );\n  const referencesSeedPapersMaxOfSum = maxOfSum(\n    withoutSeedPapers.map((entry) => entry.referencesSeedPapers)\n  );\n\n  const normalized = updated.map((entry) => ({\n    ...entry,\n    keywordSims: entry.keywordSims.map((sim) => sim / keywordSimsMaxOfSum),\n    seedPaperSims: entry.seedPaperSims.map(\n      (sim) => sim / seedPaperSimsMaxOfSum\n    ),\n    referencedBySeedPapers: entry.referencedBySeedPapers.map(\n      (sim) => sim / referencedBySeedPapersMaxOfSum\n    ),\n    referencsySeedPapers: entry.referencesSeedPapers.map(\n      (sim) => sim / referencesSeedPapersMaxOfSum\n    ),\n  }));\n\n  const inner = (as: number[], bs: number[]) =>\n    as.reduce((acc, a, i) => acc + a * bs[i], 0);\n\n  const withScore = normalized.map((entry) => ({\n    ...entry,\n    score:\n      inner(\n        entry.keywordSims,\n        state.weights.keywordSimilarity.components.map(\n          (comp) => comp.weight / 100\n        )\n      ) *\n        state.weights.keywordSimilarity.maxVal +\n      inner(\n        entry.seedPaperSims,\n        state.weights.seedPaperSimilarity.components.map(\n          (comp) => comp.weight / 100\n        )\n      ) *\n        state.weights.seedPaperSimilarity.maxVal +\n      inner(\n        entry.referencesSeedPapers,\n        state.weights.referencesSeedPapers.components.map(\n          (comp) => comp.weight / 100\n        )\n      ) *\n        state.weights.referencesSeedPapers.maxVal +\n      inner(\n        entry.referencedBySeedPapers,\n        state.weights.referencedBySeedPapers.components.map(\n          (comp) => comp.weight / 100\n        )\n      ) *\n        state.weights.referencedBySeedPapers.maxVal,\n  }));\n\n  const sorted = withScore.sort((a, b) =>\n    a.score === b.score ? b.year - a.year : b.score - a.score\n  );\n  return sorted;\n}\n\nexport const overviewReducer = (\n  state: OverviewState = defaultOverviewState,\n  action: ReducibleAction\n): OverviewState => {\n  switch (action.type) {\n    case getType(actionOverview.getData.complete):\n      const paperEntries = action.payload.map((entry) => ({\n        ...entry,\n        referencedBy: entry.referenced_by,\n        numReferencing: entry.referencing.length,\n        numReferenced: entry.referenced_by.length,\n        keywordSims: [],\n        seedPaperSims: [],\n        referencedBySeedPapers: [],\n        referencesSeedPapers: [],\n        score: 0,\n      }));\n      const nextState = {\n        ...state,\n        paperEntries,\n      };\n      return {\n        ...nextState,\n        paperEntries: updateSortedPaperEntries(nextState, false, false),\n      };\n    case getType(actionOverview.setKeywords): {\n      const keywords = action.payload;\n\n      const nextState: OverviewState = {\n        ...state,\n        keywords,\n        weights: {\n          ...state.weights,\n          keywordSimilarity: {\n            maxVal: 1,\n            components: keywords.map((keyword) => ({\n              keyword,\n              weight: Math.floor((1 / keywords.length) * 100),\n            })),\n          },\n        },\n        histories: [...state.histories, state],\n      };\n      return {\n        ...nextState,\n        paperEntries: updateSortedPaperEntries(nextState, true, false),\n      };\n    }\n    case getType(actionOverview.setSeedPapers): {\n      const seedPapers = action.payload;\n      const nextState: OverviewState = {\n        ...state,\n        seedPapers,\n        weights: {\n          ...state.weights,\n          seedPaperSimilarity: {\n            ...state.weights.seedPaperSimilarity,\n            components: seedPapers.map((entry) => ({\n              entry,\n              weight: Math.floor((1 / seedPapers.length) * 100),\n            })),\n          },\n          referencedBySeedPapers: {\n            ...state.weights.referencedBySeedPapers,\n            components: seedPapers.map((entry) => ({\n              entry,\n              weight: Math.floor((1 / seedPapers.length) * 100),\n            })),\n          },\n          referencesSeedPapers: {\n            ...state.weights.referencesSeedPapers,\n            components: seedPapers.map((entry) => ({\n              entry,\n              weight: Math.floor((1 / seedPapers.length) * 100),\n            })),\n          },\n        },\n      };\n      return {\n        ...nextState,\n        paperEntries: updateSortedPaperEntries(nextState, false, true),\n        histories: [...state.histories, state],\n      };\n    }\n    case getType(actionOverview.setMarkedPapers):\n      const markedPapers = action.payload;\n      return {\n        ...state,\n        markedPapers,\n      };\n    case getType(actionOverview.setHistories):\n      const histories = action.payload;\n      return {\n        ...state,\n        histories,\n      };\n    case getType(actionOverview.selectHistory):\n      const history = action.payload;\n      return history;\n    case getType(actionOverview.setWeights): {\n      const weights = action.payload;\n      const nextState: OverviewState = {\n        ...state,\n        weights,\n        histories: [...state.histories, state],\n      };\n      return {\n        ...nextState,\n        paperEntries: updateSortedPaperEntries(nextState, false, false),\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { overviewReducer } from \"./overview-reducers\";\nexport const rootReducer = combineReducers({\n  overview: overviewReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { rootReducer } from \"./redux/reducer/root-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, createLogger())\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}