{"version":3,"sources":["redux/action/api/api.ts","redux/action/overview-actions.ts","redux/action/utils.ts","redux/action/root-action.ts","redux/state/root-state.ts","stopwords.ts","utils.ts","redux/reducer/overview-reducers.ts","components/NetworkView.tsx","components/CitationRelationshipView.tsx","components/DescriptionCard.tsx","components/PaperDetailView.tsx","components/keyword-research.svg","components/HistoryLinkRev.tsx","components/SimilaritiesBar.tsx","components/TitleBox.tsx","components/AdjustFilterModal.tsx","components/PapersTabularView.tsx","components/KeywordsBarChart.jsx","components/KeywordsBarChartContainer.tsx","components/SearchBox.tsx","components/SummaryView.tsx","components/Overview.tsx","App.tsx","serviceWorker.ts","redux/reducer/root-reducer.ts","index.tsx"],"names":["a","Axios","get","r","Object","entries","data","map","doi","entry","filter","title","length","unitActions","setKeywords","createAction","keywords","setSeedPapers","seedPapers","setMarkedPapers","markedPapers","setHistories","histories","setWeights","weights","selectHistory","history","setFilter","setForceAllKeywords","forceAllKeywords","thunkActions","getData","fetchType","completeType","describer","fetch","fetchPayload","complete","completePayload","thunk","args","dispatch","request","response","makeThunk","actionOverview","setHoveredEntry","paperEntry","setSelectedEntry","useThunkDispatch","useDispatch","useRootSelector","selector","useSelector","stopwords","Set","split","maxOfSum","values","reduce","b","Math","max","x","y","extractKeywords","content","word","toLowerCase","replace","has","defaultOverviewState","originalPaperEntries","paperEntries","paperEntriesToShow","seedPaperSimsCache","recentlyPublished","weight","citation","keywordSimilarity","referencedBySeedPapers","referencesSeedPapers","seedPaperSimilarity","mode","updateSortedPaperEntries","state","updateKeywordSims","updateSeedPaperSims","filtered","year","from","to","authors","author","includes","sorted","updated","newEntry","keywordSims","keyword","min","abstract","seedPaperSims","seed","union","intersection","forEach","w","add","size","referencedBy","referencing","recentlyPublishedMax","citationMax","numReferenced","keywordSimsMaxOfSum","withoutSeedPapers","d","seedPaperSimsMaxOfSum","referencedBySeedPapersMaxOfSum","referencesSeedPapersMaxOfSum","normalized","sim","withScore","score","scoreRecentlyPublished","scoreKeyword","scoreSeedPapers","scoreCitation","scoreReferencesSeedPapers","scoreReferencedBySeedPapers","d3","other","sort","p","slice","overviewReducer","action","type","getType","payload","referenced_by","numReferencing","nextState","cytoscape","use","popper","NetworkView","selectedEntry","cohesivenesses","networkGraphContainer","useRef","useState","cy","setCy","useLayoutEffect","current","papers","push","container","elements","index","id","style","width","height","label","join","undefined","indexOf","toDoi","fromDoi","concat","source","target","distance","layout","name","idealEdgeLength","edge","_private","animate","userZoomingEnabled","nodes","unbind","bind","event","ref","CitationRelationshipView","overview","ui","overviewState","shouldUpdateCohesiveness","setShouldUpdateCohesiveness","setCalcPercentage","setCohesivenesses","useEffect","_cohesivenesses","i","withoutThis","console","log","Card","Box","fill","Grid","pad","rows","direction","align","gap","Heading","level","trigger","Button","color","onClick","on","display","alignItems","justifyContent","DescriptionCard","description","tagColors","marked","tags","keys","tag","RegExp","tokens","t","Text","as","wordBreak","token","startsWith","key","backgroundColor","brighter","PaperDetailView","overflow","vertical","className","Table","TableBody","TableRow","TableCell","scope","secondary","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref","svgRef","props","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","HistoryLink","historiesDiff","offsetHeight","cellHeight","svgWidth","numHistories","hoveredEntry","svgHeight","onSelectHistory","prevHistoryLength","setPrevHistoryLength","root","select","_root","topKDois","append","classed","selectAll","attr","_lineData","_newHistory","_prevHistory","n","transition","duration","te","ti","fi","findIndex","fe","fromIndex","toIndex","newHistory","remove","diff","SimilaritiesBar","similarities","abs","setWidth","setHeight","getBoundingClientRect","marginTop","TitleBox","onMouseOver","onMouseOut","show","setShow","textOverflow","whiteSpace","Layer","onEsc","onClickOutside","AdjustWeightModal","onClose","columns","value","onChange","e","justify","margin","top","primary","PapersTabularView","prevHistory","paper","emptyWeights","field","maxVal","weightsHash","_setHoveredEntry","_setSelectedEntry","showFilterModal","setShowFilterModal","background","CardHeader","AdjustFilterModal","CardBody","historyIndex","_","paddingLeft","paddingRight","textAlign","conference","Stack","anchor","KeywordsBarChart","wordCounts","userInputKeywords","maxCount","count","isSelected","barHeight","KeywordsBarChartContainer","targetPapers","useMemo","toLocaleLowerCase","find","overflowY","k","SearchBox","currentKeyword","setCurrentKeyword","targetPaperMode","setTargetPaperMode","CheckBox","checked","Form","onSubmit","TextInput","List","primaryKey","item","left","right","bottom","icon","hoverIndicator","RadioButtonGroup","options","SummaryView","minWidth","Overview","App","aria-label","href","prefix","Boolean","window","location","hostname","match","defaultUIState","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","createLogger","predicate","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e78710f.chunk.js","sourcesContent":["import Axios from \"axios\";\nimport { PaperEntry } from \"../../state/overview\";\n\nexport async function getData() {\n  const r = await Axios.get(\"data.json\");\n  return Object.entries(r.data)\n    .map(([doi, entry]: [string, any]) => ({\n      ...entry,\n      doi,\n    }))\n    .filter((entry) => entry.title.length) as PaperEntry[];\n}\n\n// const baseUrl = process.env.REACT_APP_BASEURL || \"http://localhost:8998/\";\n\n// export async function getQuery(issueQueryId: number) {\n//   const r = await Axios.get<IssueQuery>(baseUrl + `query/${issueQueryId}`);\n//   return r.data;\n// }\n\n// export async function postQuery(description: string) {\n//   console.log(process.env);\n//   console.log(\"baseUrl: \" + baseUrl);\n//   const r = await Axios.post<IssueQuery>(baseUrl + \"query/\", {\n//     description,\n//   });\n//   return r.data;\n// }\n","import { createAction } from \"typesafe-actions\";\nimport { EntryFilter, OverviewState, PaperEntry, Weights } from \"../state/overview\";\nimport { getData } from \"./api/api\";\nimport { makeThunk } from \"./utils\";\n\nconst unitActions = {\n  setKeywords: createAction(\n    \"OVERVIEW/SET_KEYWORDS\",\n    (keywords: string[]) => keywords\n  )(),\n  setSeedPapers: createAction(\n    \"OVERVIEW/SET_SEED_PAPERS\",\n    (seedPapers: PaperEntry[]) => seedPapers\n  )(),\n  setMarkedPapers: createAction(\n    \"OVERVIEW/SET_MARKED_PAPERS\",\n    (markedPapers: PaperEntry[]) => markedPapers\n  )(),\n  setHistories: createAction(\n    \"OVERVIEW/SET_HISTORIES\",\n    (histories: OverviewState[]) => histories\n  )(),\n  setWeights: createAction(\n    \"OVERVIEW/SET_WEIGHTS\",\n    (weights: Weights) => weights\n  )(),\n  selectHistory: createAction(\n    \"OVERVIEW/SELECT_HISTORY\",\n    (history: OverviewState) => history\n  )(),\n  setFilter: createAction(\n    \"OVERVIEW/SET_FILTER\",\n    (filter: EntryFilter | null) => filter\n  )(),\n  setForceAllKeywords: createAction(\n    \"OVERVIEW/SET_FORCE_ALL_KEYWORDS\",\n    (forceAllKeywords: boolean) => forceAllKeywords\n  )(),\n\n};\n\nconst thunkActions = {\n  getData: makeThunk(\n    \"OVERVIEW/GET_DATA/fetch\",\n    \"OVERVIEW/GET_DATA/complete\",\n    () => ({\n      request: {},\n      response: () => getData(),\n    })\n  ),\n};\n\ntype ThunkActionObject = typeof thunkActions;\ntype UnitActionObject = typeof unitActions;\ntype ThunkAction = ThunkActionObject[keyof ThunkActionObject];\ntype UnitAction = UnitActionObject[keyof UnitActionObject];\n\nexport const actionOverview = { ...thunkActions, ...unitActions };\nexport type OverviewActionReducible = ReturnType<\n  ThunkAction[\"fetch\"] | ThunkAction[\"complete\"] | UnitAction\n>;\nexport type OverviewActionDispatchable = ReturnType<\n  ThunkAction[\"thunk\"] | UnitAction\n>;\n","import { createAction } from \"typesafe-actions\";\nimport { Dispatch } from \"react\";\n\nexport function makeThunk<\n  FetchType extends string,\n  CompleteType extends string,\n  FetchPayload,\n  CompletePayload,\n  Args extends any[]\n>(\n  fetchType: FetchType,\n  completeType: CompleteType,\n  describer: (\n    ...args: Args\n  ) => {\n    request: FetchPayload;\n    response: () => Promise<CompletePayload>;\n  }\n) {\n  const fetch = createAction(\n    fetchType,\n    (fetchPayload: FetchPayload) => fetchPayload\n  )();\n\n  const complete = createAction(\n    completeType,\n    (completePayload: CompletePayload, fetchPayload: FetchPayload) =>\n      completePayload,\n    (completePayload: CompletePayload, fetchPayload: FetchPayload) =>\n      fetchPayload\n  )();\n\n  const thunk = (...args: Args) => async (dispatch: Dispatch<any>) => {\n    const { request, response } = describer(...args);\n    dispatch(fetch(request));\n    dispatch(complete(await response(), request));\n  };\n\n  return { fetch, complete, thunk };\n}\n","import { Dispatch } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createAction } from \"typesafe-actions\";\nimport { PaperEntry } from \"../state/overview\";\nimport {\n  OverviewActionDispatchable,\n  OverviewActionReducible,\n} from \"./overview-actions\";\n\nexport const setHoveredEntry = createAction(\n  \"SET_HOVERED_ENTRY\",\n  (paperEntry: PaperEntry | null) => paperEntry\n)();\n\nexport const setSelectedEntry = createAction(\n  \"SET_SELECTED_ENTRY\",\n  (paperEntry: PaperEntry) => paperEntry\n)();\n\nexport type ReducibleAction =\n  | OverviewActionReducible\n  | ReturnType<typeof setHoveredEntry>\n  | ReturnType<typeof setSelectedEntry>;\n\nexport type DispatchableAction =\n  | OverviewActionDispatchable\n  | ReturnType<typeof setHoveredEntry>\n  | ReturnType<typeof setSelectedEntry>;\n\ntype CustomDispatch = Dispatch<DispatchableAction>;\nexport const useThunkDispatch = () => useDispatch<CustomDispatch>();\n","import { useSelector } from \"react-redux\";\nimport { OverviewState, PaperEntry } from \"./overview\";\n\nexport interface UIState {\n  hoveredEntry: PaperEntry | null;\n  selectedEntry: PaperEntry | null;\n}\n\nexport interface RootState {\n  overview: OverviewState;\n  ui: UIState;\n}\n\nexport function useRootSelector<T>(selector: (state: RootState) => T): T {\n  return useSelector(selector);\n}\n","export const stopwords = new Set(`a\nable\nabout\nabove\nabst\naccordance\naccording\naccordingly\nacross\nact\nactually\nadded\nadj\naffected\naffecting\naffects\nafter\nafterwards\nagain\nagainst\nah\nall\nalmost\nalone\nalong\nalready\nalso\nalthough\nalways\nam\namong\namongst\nan\nand\nannounce\nanother\nany\nanybody\nanyhow\nanymore\nanyone\nanything\nanyway\nanyways\nanywhere\napparently\napproximately\nare\naren\narent\narise\naround\nas\naside\nask\nasking\nat\nauth\navailable\naway\nawfully\nb\nback\nbe\nbecame\nbecause\nbecome\nbecomes\nbecoming\nbeen\nbefore\nbeforehand\nbegin\nbeginning\nbeginnings\nbegins\nbehind\nbeing\nbelieve\nbelow\nbeside\nbesides\nbetween\nbeyond\nbiol\nboth\nbrief\nbriefly\nbut\nby\nc\nca\ncame\ncan\ncannot\ncan't\ncause\ncauses\ncertain\ncertainly\nco\ncom\ncome\ncomes\ncontain\ncontaining\ncontains\ncould\ncouldnt\nd\ndate\ndid\ndidn't\ndifferent\ndo\ndoes\ndoesn't\ndoing\ndone\ndon't\ndown\ndownwards\ndue\nduring\ne\neach\ned\nedu\neffect\neg\neight\neighty\neither\nelse\nelsewhere\nend\nending\nenough\nespecially\net\net-al\netc\neven\never\nevery\neverybody\neveryone\neverything\neverywhere\nex\nexcept\nf\nfar\nfew\nff\nfifth\nfirst\nfive\nfix\nfollowed\nfollowing\nfollows\nfor\nformer\nformerly\nforth\nfound\nfour\nfrom\nfurther\nfurthermore\ng\ngave\nget\ngets\ngetting\ngive\ngiven\ngives\ngiving\ngo\ngoes\ngone\ngot\ngotten\nh\nhad\nhappens\nhardly\nhas\nhasn't\nhave\nhaven't\nhaving\nhe\nhed\nhence\nher\nhere\nhereafter\nhereby\nherein\nheres\nhereupon\nhers\nherself\nhes\nhi\nhid\nhim\nhimself\nhis\nhither\nhome\nhow\nhowbeit\nhowever\nhundred\ni\nid\nie\nif\ni'll\nim\nimmediate\nimmediately\nimportance\nimportant\nin\ninc\nindeed\nindex\ninformation\ninstead\ninto\ninvention\ninward\nis\nisn't\nit\nitd\nit'll\nits\nitself\ni've\nj\njust\nk\nkeep\tkeeps\nkept\nkg\nkm\nknow\nknown\nknows\nl\nlargely\nlast\nlately\nlater\nlatter\nlatterly\nleast\nless\nlest\nlet\nlets\nlike\nliked\nlikely\nline\nlittle\n'll\nlook\nlooking\nlooks\nltd\nm\nmade\nmainly\nmake\nmakes\nmany\nmay\nmaybe\nme\nmean\nmeans\nmeantime\nmeanwhile\nmerely\nmg\nmight\nmillion\nmiss\nml\nmore\nmoreover\nmost\nmostly\nmr\nmrs\nmuch\nmug\nmust\nmy\nmyself\nn\nna\nname\nnamely\nnay\nnd\nnear\nnearly\nnecessarily\nnecessary\nneed\nneeds\nneither\nnever\nnevertheless\nnew\nnext\nnine\nninety\nno\nnobody\nnon\nnone\nnonetheless\nnoone\nnor\nnormally\nnos\nnot\nnoted\nnothing\nnow\nnowhere\no\nobtain\nobtained\nobviously\nof\noff\noften\noh\nok\nokay\nold\nomitted\non\nonce\none\nones\nonly\nonto\nor\nord\nother\nothers\notherwise\nought\nour\nours\nourselves\nout\noutside\nover\noverall\nowing\nown\np\npage\npages\npart\nparticular\nparticularly\npast\nper\nperhaps\nplaced\nplease\nplus\npoorly\npossible\npossibly\npotentially\npp\npredominantly\npresent\npreviously\nprimarily\nprobably\npromptly\nproud\nprovides\nput\nq\nque\nquickly\nquite\nqv\nr\nran\nrather\nrd\nre\nreadily\nreally\nrecent\nrecently\nref\nrefs\nregarding\nregardless\nregards\nrelated\nrelatively\nresearch\nrespectively\nresulted\nresulting\nresults\nright\nrun\ns\nsaid\nsame\nsaw\nsay\nsaying\nsays\nsec\nsection\nsee\nseeing\nseem\nseemed\nseeming\nseems\nseen\nself\nselves\nsent\nseven\nseveral\nshall\nshe\nshed\nshe'll\nshes\nshould\nshouldn't\nshow\nshowed\nshown\nshowns\nshows\nsignificant\nsignificantly\nsimilar\nsimilarly\nsince\nsix\nslightly\nso\nsome\nsomebody\nsomehow\nsomeone\nsomethan\nsomething\nsometime\nsometimes\nsomewhat\nsomewhere\nsoon\nsorry\nspecifically\nspecified\nspecify\nspecifying\nstill\nstop\nstrongly\nsub\nsubstantially\nsuccessfully\nsuch\nsufficiently\nsuggest\nsup\nsure\tt\ntake\ntaken\ntaking\ntell\ntends\nth\nthan\nthank\nthanks\nthanx\nthat\nthat'll\nthats\nthat've\nthe\ntheir\ntheirs\nthem\nthemselves\nthen\nthence\nthere\nthereafter\nthereby\nthered\ntherefore\ntherein\nthere'll\nthereof\ntherere\ntheres\nthereto\nthereupon\nthere've\nthese\nthey\ntheyd\nthey'll\ntheyre\nthey've\nthink\nthis\nthose\nthou\nthough\nthoughh\nthousand\nthroug\nthrough\nthroughout\nthru\nthus\ntil\ntip\nto\ntogether\ntoo\ntook\ntoward\ntowards\ntried\ntries\ntruly\ntry\ntrying\nts\ntwice\ntwo\nu\nun\nunder\nunfortunately\nunless\nunlike\nunlikely\nuntil\nunto\nup\nupon\nups\nus\nuse\nused\nuseful\nusefully\nusefulness\nuses\nusing\nusually\nv\nvalue\nvarious\n've\nvery\nvia\nviz\nvol\nvols\nvs\nw\nwant\nwants\nwas\nwasnt\nway\nwe\nwed\nwelcome\nwe'll\nwent\nwere\nwerent\nwe've\nwhat\nwhatever\nwhat'll\nwhats\nwhen\nwhence\nwhenever\nwhere\nwhereafter\nwhereas\nwhereby\nwherein\nwheres\nwhereupon\nwherever\nwhether\nwhich\nwhile\nwhim\nwhither\nwho\nwhod\nwhoever\nwhole\nwho'll\nwhom\nwhomever\nwhos\nwhose\nwhy\nwidely\nwilling\nwish\nwith\nwithin\nwithout\nwont\nwords\nworld\nwould\nwouldnt\nwww\nx\ny\nyes\nyet\nyou\nyoud\nyou'll\nyour\nyoure\nyours\nyourself\nyourselves\nyou've\nz\nzero`.split(\"\\n\"));\n","import { stopwords } from \"./stopwords\";\n\nexport function maxOfSum(values: number[][]) {\n  return values.reduce(\n    (a, b) =>\n      Math.max(\n        a,\n        b.reduce((x, y) => x + y, 0)\n      ),\n    0\n  );\n}\n\nexport function extractKeywords(content: string) {\n  return content.split(' ')\n    .map((word) => word.toLowerCase().replace(/[^a-zA-Z\\-]/g, \"\"))\n    .filter((word) => word.length >= 2 && !stopwords.has(word.toLowerCase()))\n}","import * as d3 from \"d3\";\nimport { getType } from \"typesafe-actions\";\nimport { extractKeywords, maxOfSum } from \"../../utils\";\nimport { actionOverview } from \"../action/overview-actions\";\nimport { ReducibleAction } from \"../action/root-action\";\nimport { OverviewState, PaperEntry } from \"../state/overview\";\n\nconst defaultOverviewState: OverviewState = {\n  originalPaperEntries: [],\n  paperEntries: [],\n  paperEntriesToShow: [], // post-filtered\n  keywords: [],\n  seedPapers: [],\n  markedPapers: [],\n  histories: [],\n  seedPaperSimsCache: {},\n  weights: {\n    recentlyPublished: { weight: 0.5 },\n    citation: { weight: 0.5 },\n    keywordSimilarity: { weight: 1 },\n    referencedBySeedPapers: { weight: 1 },\n    referencesSeedPapers: { weight: 1 },\n    seedPaperSimilarity: { weight: 1 },\n    mode: null,\n  },\n  filter: null,\n  forceAllKeywords: false,\n};\n\nfunction updateSortedPaperEntries(\n  state: OverviewState,\n  updateKeywordSims: boolean,\n  updateSeedPaperSims: boolean\n) {\n  let filtered = state.paperEntries;\n  if (state.filter) {\n    filtered = state.originalPaperEntries.filter(\n      (entry) =>\n        state.filter!.year.from <= entry.year &&\n        entry.year <= state.filter!.year.to\n    );\n    if (state.filter!.authors.length) {\n      filtered = filtered.filter((entry) => {\n        for (const author of state.filter!.authors) {\n          if (entry.author.includes(author)) {\n            return true;\n          }\n        }\n        return false;\n      });\n    }\n    updateKeywordSims = true;\n    updateSeedPaperSims = true;\n  }\n  const updated = filtered.map((entry) => {\n    const seedPaperSimsCache = state.seedPaperSimsCache; // going to mutate it as it's cache\n    let newEntry = { ...entry };\n    if (updateKeywordSims) {\n      const keywordSims = state.keywords.map(\n        (keyword) =>\n          Math.min(\n            5,\n            keyword\n              .split(\"zxcvzxxc\")\n              .map(\n                (word) =>\n                  (entry.title + \" \" + entry.abstract)\n                    .toLowerCase()\n                    .split(word.toLowerCase()).length - 1\n              )\n              .reduce((a, b) => a + b)\n          ) / 5\n      );\n      newEntry = { ...newEntry, keywordSims };\n    }\n    if (updateSeedPaperSims) {\n      const seedPaperSims = state.seedPapers.map((seed) => {\n        if (!(seed.doi in seedPaperSimsCache)) {\n          seedPaperSimsCache[seed.doi] = {};\n        }\n        if (!seedPaperSimsCache[seed.doi][entry.doi]) {\n          const a = new Set(\n            extractKeywords(entry.title + \" \" + entry.abstract)\n          );\n          const b = new Set(extractKeywords(seed.title + \" \" + seed.abstract));\n          const [union, intersection] = [\n            new Set<string>([]),\n            new Set<string>([]),\n          ];\n          a.forEach((w) => union.add(w));\n          b.forEach((w) => union.add(w));\n          a.forEach((w) => b.has(w) && intersection.add(w));\n          seedPaperSimsCache[seed.doi][entry.doi] =\n            intersection.size / union.size;\n        }\n        return seedPaperSimsCache[seed.doi][entry.doi];\n      });\n      const referencedBySeedPapers = state.seedPapers.map((seed) => {\n        return newEntry.referencedBy.includes(seed.doi) ? 1 : 0;\n      });\n      const referencesSeedPapers = state.seedPapers.map((seed) => {\n        return newEntry.referencing.includes(seed.doi) ? 1 : 0;\n      });\n      newEntry = {\n        ...newEntry,\n        seedPaperSims,\n        referencedBySeedPapers,\n        referencesSeedPapers,\n      };\n    }\n    return newEntry;\n  });\n\n  const recentlyPublishedMax = updated\n    .map((entry) => entry.recentlyPublished)\n    .reduce((a, b) => Math.max(a, b), 0);\n  const citationMax = updated\n    .map((entry) => entry.numReferenced)\n    .reduce((a, b) => Math.max(a, b), 0);\n  const keywordSimsMaxOfSum = maxOfSum(\n    updated.map((entry) => entry.keywordSims)\n  );\n  const withoutSeedPapers = updated.filter(\n    (entry) => !state.seedPapers.map((d) => d.doi).includes(entry.doi)\n  );\n  const seedPaperSimsMaxOfSum =\n    maxOfSum(withoutSeedPapers.map((entry) => entry.seedPaperSims)) || 1;\n  const referencedBySeedPapersMaxOfSum =\n    maxOfSum(withoutSeedPapers.map((entry) => entry.referencedBySeedPapers)) ||\n    1;\n  const referencesSeedPapersMaxOfSum =\n    maxOfSum(withoutSeedPapers.map((entry) => entry.referencesSeedPapers)) || 1;\n\n  const normalized = updated.map((entry) => ({\n    ...entry,\n    recentlyPublished: entry.recentlyPublished / recentlyPublishedMax,\n    citation: entry.numReferenced / citationMax,\n    keywordSims: entry.keywordSims.map((sim) => sim / keywordSimsMaxOfSum),\n    seedPaperSims: entry.seedPaperSims.map(\n      (sim) => sim / seedPaperSimsMaxOfSum\n    ),\n    referencedBySeedPapers: entry.referencedBySeedPapers.map(\n      (sim) => sim / referencedBySeedPapersMaxOfSum\n    ),\n    referencesSeedPapers: entry.referencesSeedPapers.map(\n      (sim) => sim / referencesSeedPapersMaxOfSum\n    ),\n  }));\n\n  const weights = state.weights;\n  const withScore = normalized.map((entry) => ({\n    ...entry,\n    score: (() => {\n      const scoreRecentlyPublished =\n        entry.recentlyPublished * state.weights.recentlyPublished.weight;\n      const scoreKeyword =\n        entry.keywordSims.reduce((a, b) => a + b, 0) *\n        state.weights.keywordSimilarity.weight;\n      const scoreSeedPapers =\n        entry.seedPaperSims.reduce((a, b) => a + b, 0) *\n        state.weights.seedPaperSimilarity.weight;\n      const scoreCitation = entry.citation * state.weights.citation.weight;\n      const scoreReferencesSeedPapers =\n        entry.referencesSeedPapers.reduce((a, b) => a + b, 0) *\n        state.weights.referencesSeedPapers.weight;\n      const scoreReferencedBySeedPapers =\n        entry.referencedBySeedPapers.reduce((a, b) => a + b, 0) *\n        state.weights.referencedBySeedPapers.weight;\n\n      if (!weights.mode) {\n        return d3.sum([\n          scoreRecentlyPublished,\n          scoreKeyword,\n          scoreSeedPapers,\n          scoreCitation,\n          scoreReferencesSeedPapers,\n          scoreReferencedBySeedPapers,\n        ]);\n      } else if (weights.mode === \"keyword\") {\n        return d3.sum([\n          1e1 * scoreRecentlyPublished,\n          1e5 * scoreKeyword,\n          1e4 * scoreSeedPapers,\n          1 * scoreCitation,\n          1e2 * scoreReferencesSeedPapers,\n          1e3 * scoreReferencedBySeedPapers,\n        ]);\n      } else if (weights.mode === \"seed\") {\n        return d3.sum([\n          1e1 * scoreRecentlyPublished,\n          1e4 * scoreKeyword,\n          1e5 * scoreSeedPapers,\n          1 * scoreCitation,\n          1e2 * scoreReferencesSeedPapers,\n          1e3 * scoreReferencedBySeedPapers,\n        ]);\n      } else if (weights.mode === \"referenced-by-seed\") {\n        return d3.sum([\n          1e1 * scoreRecentlyPublished,\n          1e2 * scoreKeyword,\n          1e3 * scoreSeedPapers,\n          1 * scoreCitation,\n          1e4 * scoreReferencesSeedPapers,\n          1e5 * scoreReferencedBySeedPapers,\n        ]);\n      } else if (weights.mode === \"references-seed\") {\n        return d3.sum([\n          1e1 * scoreRecentlyPublished,\n          1e2 * scoreKeyword,\n          1e3 * scoreSeedPapers,\n          1 * scoreCitation,\n          1e5 * scoreReferencesSeedPapers,\n          1e4 * scoreReferencedBySeedPapers,\n        ]);\n      } else if (weights.mode === \"year\") {\n        const other = d3.sum([\n          1 * scoreKeyword,\n          1 * scoreSeedPapers,\n          1 * scoreReferencesSeedPapers,\n          1 * scoreReferencedBySeedPapers,\n        ]);\n        return other > 0 ? scoreRecentlyPublished * 1e2 + other : 0;\n      } else if (weights.mode === \"year-ascending\") {\n        const other = d3.sum([\n          1 * scoreKeyword,\n          1 * scoreSeedPapers,\n          1 * scoreReferencesSeedPapers,\n          1 * scoreReferencedBySeedPapers,\n        ]);\n        return other > 0 ? (1-scoreRecentlyPublished) * 1e2 + other : 0;\n      } else if (weights.mode === \"citation\") {\n        const other = d3.sum([\n          1 * scoreKeyword,\n          1 * scoreSeedPapers,\n          1 * scoreReferencesSeedPapers,\n          1 * scoreReferencedBySeedPapers,\n        ]);\n        return other > 0 ? scoreCitation * 1e2 + other : 0;\n      } else {\n        return 0;\n      }\n    })(),\n  }));\n\n  let sorted: (typeof withScore);\n  if (state.keywords.length === 0 && state.seedPapers.length === 0) {\n    sorted = withScore;\n  } else {\n    sorted = withScore.sort((a, b) =>\n      a.score === b.score ? b.year - a.year : b.score - a.score\n    );\n  }\n  return {\n    paperEntries: sorted,\n    paperEntriesToShow: sorted.filter(entry => {\n      return !state.seedPapers.map(p => p.doi).includes(entry.doi)\n      && (!state.forceAllKeywords || entry.keywordSims.reduce((a, b) => a * b, 1) > 0)\n    }).slice(0, 30)\n\n  }\n}\n\nexport const overviewReducer = (\n  state: OverviewState = defaultOverviewState,\n  action: ReducibleAction\n): OverviewState => {\n  switch (action.type) {\n    case getType(actionOverview.getData.complete):\n      const paperEntries = action.payload.map((entry) => ({\n        ...entry,\n        recentlyPublished: entry.year - 1980,\n        referencedBy: entry.referenced_by,\n        numReferencing: entry.referencing.length,\n        numReferenced: entry.referenced_by.length,\n        keywordSims: [],\n        seedPaperSims: [],\n        referencedBySeedPapers: [],\n        referencesSeedPapers: [],\n        score: 0,\n      }));\n      const nextState = {\n        ...state,\n        originalPaperEntries: paperEntries,\n        paperEntries,\n      };\n      return {\n        ...nextState,\n        ...updateSortedPaperEntries(nextState, false, false),\n      };\n    case getType(actionOverview.setKeywords): {\n      const keywords = action.payload;\n\n      const nextState: OverviewState = {\n        ...state,\n        keywords,\n        weights: {\n          ...state.weights,\n          keywordSimilarity: { weight: 1 },\n        },\n        histories: [...state.histories, state],\n      };\n      return {\n        ...nextState,\n        ...updateSortedPaperEntries(nextState, true, false),\n      };\n    }\n    case getType(actionOverview.setSeedPapers): {\n      const seedPapers = action.payload;\n      const nextState: OverviewState = {\n        ...state,\n        seedPapers,\n        weights: {\n          ...state.weights,\n          seedPaperSimilarity: {\n            ...state.weights.seedPaperSimilarity,\n          },\n          referencedBySeedPapers: {\n            ...state.weights.referencedBySeedPapers,\n          },\n          referencesSeedPapers: {\n            ...state.weights.referencesSeedPapers,\n          },\n        },\n      };\n      return {\n        ...nextState,\n        ...updateSortedPaperEntries(nextState, false, true),\n        histories: [...state.histories, state],\n      };\n    }\n    case getType(actionOverview.setMarkedPapers):\n      const markedPapers = action.payload;\n      return {\n        ...state,\n        markedPapers,\n      };\n    case getType(actionOverview.setHistories):\n      const histories = action.payload;\n      return {\n        ...state,\n        histories,\n      };\n    case getType(actionOverview.selectHistory):\n      const history = action.payload;\n      return history;\n    case getType(actionOverview.setWeights): {\n      const weights = action.payload;\n      const nextState: OverviewState = {\n        ...state,\n        weights,\n        histories: [...state.histories, state],\n      };\n      return {\n        ...nextState,\n        ...updateSortedPaperEntries(nextState, false, false),\n      };\n    }\n    case getType(actionOverview.setFilter): {\n      const filter = action.payload;\n      const nextState: OverviewState = {\n        ...state,\n        filter,\n        histories: [...state.histories, state],\n      };\n      return {\n        ...nextState,\n        ...updateSortedPaperEntries(nextState, false, false),\n      };\n    }\n    case getType(actionOverview.setForceAllKeywords): {\n      const nextState = {\n        ...state,\n        forceAllKeywords: action.payload,\n        histories: [...state.histories, state],\n      }\n      return {\n        ...nextState,\n        ...updateSortedPaperEntries(nextState, false, false),\n      }\n    }\n    default:\n      return state;\n  }\n};\n","import cytoscape from \"cytoscape\";\n// @ts-ignore\nimport popper from \"cytoscape-popper\";\nimport * as d3 from \"d3\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { PaperEntry } from \"../redux/state/overview\";\n\ncytoscape.use(popper);\n\ninterface Props {\n  seedPapers: PaperEntry[];\n  selectedEntry: PaperEntry | null;\n  cohesivenesses: number[];\n}\n\nconst NetworkView: React.FC<Props> = ({\n  seedPapers,\n  selectedEntry,\n  cohesivenesses,\n}) => {\n  const networkGraphContainer = useRef<HTMLDivElement>(null);\n  const [cy, setCy] = useState<cytoscape.Core | null>(null);\n  useLayoutEffect(() => {\n    if (networkGraphContainer.current) {\n      const papers = [...seedPapers];\n      if (selectedEntry) {\n        papers.push(selectedEntry);\n      }\n      setCy(\n        cytoscape({\n          container: networkGraphContainer.current,\n          elements: [\n            // nodes\n            ...papers.map((entry, index) => ({\n              data: {\n                id: `NODE_${entry.doi}`,\n                entry,\n              },\n              style: {\n                width: 15,\n                height: 15,\n                label: entry.title.includes(\":\")\n                  ? entry.title.split(\":\")[0].split(\" \").slice(0, 3).join(\" \")\n                  : entry.title.split(\" \").slice(0, 2).join(\" \"),\n                \"font-size\": \"0.5em\",\n                \"background-color\":\n                  (entry.doi === selectedEntry?.doi && !seedPapers.map(p => p.doi).includes(selectedEntry.doi))\n                    ? d3.schemeGreys[4][1]\n                    : cohesivenesses[seedPapers.indexOf(entry)] === undefined\n                    ? d3.interpolatePurples(0.5)\n                    : d3.interpolateBlues(0.3 + 0.7 * cohesivenesses[seedPapers.indexOf(entry)]),\n              },\n            })),\n            // edges\n            ...papers\n              .map((entry) => {\n                return entry.referencing.map((toDoi) => ({\n                  toDoi,\n                  fromDoi: entry.doi,\n                }));\n              })\n              .reduce((a, b) => a.concat(b), [])\n              .filter(\n                ({ fromDoi, toDoi }) =>\n                  papers.map((x) => x.doi).includes(toDoi) && fromDoi !== toDoi\n              )\n              .map(({ fromDoi, toDoi }) => ({\n                data: {\n                  id: `EDGE_${fromDoi}_${toDoi}`,\n                  source: `NODE_${fromDoi}`,\n                  target: `NODE_${toDoi}`,\n                  distance: 1,\n                },\n              })),\n          ],\n\n          style: [\n            // the stylesheet for the graph\n            {\n              selector: \"node\",\n              style: {\n                \"background-color\": \"#666\",\n              },\n            },\n            {\n              selector: \"edge\",\n              style: {\n                // width: 5,\n                \"line-color\": \"#ccc\",\n                \"target-arrow-color\": \"#ccc\",\n                \"target-arrow-shape\": \"triangle\",\n                \"curve-style\": \"bezier\",\n              },\n            },\n          ],\n\n          layout: {\n            name: \"cose\",\n            idealEdgeLength: (edge) => {\n              return edge._private.data.distance;\n            },\n            // edgeElasticity: edge => 10,\n            animate: false,\n          },\n          userZoomingEnabled: false,\n        })\n      );\n    }\n  }, [networkGraphContainer, seedPapers, selectedEntry, cohesivenesses]);\n\n  useLayoutEffect(() => {\n    if (cy) {\n      cy.nodes().unbind(\"click\");\n      cy.nodes().bind(\"click\", (event) => {\n        // const node = event.target;\n        // const issueKey = ((node as any)._private.data.id as string).slice(5);\n        // onClick(issueKey);\n      });\n    }\n  }, [cy]);\n\n  return (\n    <div\n      style={{ height: \"100%\", width: \"100%\" }}\n      ref={networkGraphContainer}\n    ></div>\n  );\n};\n\nexport default NetworkView;\n","import Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\nimport { Box, Button, Card, Grid, Heading, Text } from \"grommet\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { overviewReducer } from \"../redux/reducer/overview-reducers\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport NetworkView from \"./NetworkView\";\n\nconst CitationRelationshipView = () => {\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const keywords = useRootSelector((state) => state.overview.keywords);\n  const weights = useRootSelector((state) => state.overview.weights);\n  const selectedEntry = useRootSelector((state) => state.ui.selectedEntry);\n  const overviewState = useRootSelector((state) => state.overview);\n  const [shouldUpdateCohesiveness, setShouldUpdateCohesiveness] = useState(\n    false\n  );\n  const [calcPercentage, setCalcPercentage] = useState(-1);\n  const [cohesivenesses, setCohesivenesses] = useState([] as number[]);\n  useEffect(() => {\n    if (shouldUpdateCohesiveness) {\n      setShouldUpdateCohesiveness(false);\n      const _cohesivenesses = seedPapers.map((entry, i) => {\n        setCalcPercentage(i / seedPapers.length);\n        const withoutThis = overviewReducer(\n          overviewState,\n          actionOverview.setSeedPapers(\n            seedPapers.filter((p) => p.doi !== entry.doi)\n          )\n        );\n        const index = withoutThis.paperEntriesToShow\n          .map((p) => p.doi)\n          .indexOf(entry.doi);\n        console.log({ entry, withoutThis, index });\n        return (30 - (index >= 0 ? index : 30)) / 30;\n      });\n      setCalcPercentage(-1);\n      setCohesivenesses(_cohesivenesses);\n    }\n  }, [seedPapers, keywords, weights, shouldUpdateCohesiveness]);\n\n  return (\n    <Card>\n      <Box fill={true} height={{ min: \"0px\" }}>\n        <Grid fill={true} pad=\"small\" rows={[\"auto\", \"1fr\"]}>\n          <Box direction=\"row\" align=\"baseline\" gap=\"small\">\n            <Heading level=\"5\">Citation Relationship</Heading>\n            <Popup\n              trigger={\n                <Button\n                  size=\"small\"\n                  color=\"blue\"\n                  onClick={() => {\n                    setShouldUpdateCohesiveness(true);\n                  }}\n                >\n                  Update Cohesiveness\n                </Button>\n              }\n              on={[\"hover\"]}\n            >\n              High cohesiveness indicates that, the paper should be still ranked\n              high when it is excluded from the seed paper set. This operation\n              might be slow when there are many seed papers. The higher the\n              cohesiveness, the darker the color of the node.\n            </Popup>\n          </Box>\n          <div\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <NetworkView\n              seedPapers={seedPapers}\n              selectedEntry={selectedEntry}\n              cohesivenesses={cohesivenesses}\n            />\n          </div>\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nexport default CitationRelationshipView;\n","import * as d3 from \"d3\";\nimport { Card, CardBody, Text } from \"grommet\";\nimport React from \"react\";\n\ninterface Props {\n  description: string;\n  tagColors: { [tag: string]: string };\n}\n\nconst DescriptionCard: React.FC<Props> = ({ description, tagColors }) => {\n  let marked = description;\n  const tags = Object.keys(tagColors);\n  const DELIM0 = \"<DELIM0>\";\n  const DELIM1 = \"<DELIM1>\";\n  tags.forEach((tag) => {\n    marked = marked.replace(\n      new RegExp(tag, \"g\"),\n      `${DELIM0}${DELIM1}${tag}${DELIM0}`\n    );\n  });\n  const tokens = marked.split(DELIM0).filter((t) => t.length);\n  return (\n    <Text as=\"p\" wordBreak=\"break-all\">\n      {tokens.map((token, i) =>\n        token.startsWith(DELIM1) ? (\n          <Text\n            key={i}\n            as=\"span\"\n            style={{\n              backgroundColor: d3\n                .color(tagColors[token.slice(DELIM1.length)])\n                ?.brighter().brighter() as any,\n            }}\n          >\n            {token.slice(DELIM1.length)}\n          </Text>\n        ) : (\n          <Text key={i} as=\"span\">\n            {token}\n          </Text>\n        )\n      )}\n    </Text>\n  );\n};\n\nexport default DescriptionCard;\n","import * as d3 from \"d3\";\nimport React from \"react\";\nimport {\n  Box,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Text,\n  Button,\n  Heading,\n  Card,\n} from \"grommet\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport DescriptionCard from \"./DescriptionCard\";\n\nconst PaperDetailView = () => {\n  const entry = useRootSelector((state) => state.ui.selectedEntry);\n  const keywords = useRootSelector((state) => state.overview.keywords);\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const dispatch = useThunkDispatch();\n  const tagColors = {} as { [keyword: string]: string };\n  keywords.forEach(\n    (keyword, i) => (tagColors[keyword] = d3.schemeTableau10[Math.min(i, 9)])\n  );\n\n  if (!entry) {\n    return <Card />;\n  }\n  return (\n    <Card>\n      <Box fill={true} height={{ min: \"0px\" }}>\n        <Grid fill={true} pad=\"small\" rows={[\"auto\", \"1fr\", \"auto\"]}>\n          <Heading level=\"5\">Paper Detail</Heading>\n          <Box\n            fill={true}\n            overflow={{ vertical: \"scroll\" }}\n            className=\"styled-scroll\"\n          >\n            <Table>\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">Title</TableCell>\n                  <TableCell>\n                    <Text>{entry.title}</Text>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Authors</TableCell>\n                  <TableCell>\n                    <Text>{entry.author.join(\"; \")}</Text>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Year</TableCell>\n                  <TableCell>\n                    <Text>{entry.year}</Text>\n                  </TableCell>\n                </TableRow>\n\n                <TableRow>\n                  <TableCell scope=\"row\">Abstract</TableCell>\n                  <TableCell>\n                    <DescriptionCard\n                      description={entry.abstract}\n                      tagColors={tagColors}\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Keywords</TableCell>\n                  <TableCell>\n                    <Text>{entry.keywords.join(\"; \")}</Text>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Box>\n          <Box>\n            <Button\n              onClick={() => {\n                if (!seedPapers.includes(entry)) {\n                  dispatch(\n                    actionOverview.setSeedPapers([...seedPapers, entry])\n                  );\n                }\n              }}\n              secondary\n              label=\"Add to seed papers\"\n            ></Button>\n          </Box>\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nexport default PaperDetailView;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M63.928,14.536C55.865,0.649,38.168-4.055,24.281,3.784C10.392,11.849,5.688,29.546,13.529,43.432 c8.064,13.889,25.76,18.592,39.646,10.527C67.065,46.344,71.993,28.425,63.928,14.536z M17.785,41.193 c-6.72-11.646-2.688-26.432,8.96-33.15c11.648-6.722,26.434-2.688,33.152,8.96c6.72,11.646,2.688,26.431-8.961,33.149 C39.288,56.873,24.505,52.841,17.785,41.193z M70.281,69.15l-12.413,7.172L48.23,59.641l12.413-7.172L70.281,69.15z M68.855,81.289 C65.496,83.303,61.016,81.96,59,78.6l12.544-7.168C73.561,75.016,72.217,79.271,68.855,81.289z M46.904,23.048h5.602l-5.602,18.144 h-5.376l-1.792-6.271c-0.448-1.792-0.672-3.361-1.12-5.603c-0.224,2.241-0.672,3.811-1.12,5.603l-1.792,6.271h-5.376l-5.15-18.144 H31l1.346,7.392c0.446,2.019,0.896,4.032,1.12,6.048c0.224-2.016,0.896-4.256,1.118-6.048l2.018-7.392h4.479l1.792,7.392 c0.449,2.019,0.896,4.032,1.348,6.048c0.444-2.237,0.672-4.255,1.116-6.271L46.904,23.048z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgKeywordResearch = function SvgKeywordResearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"82.235px\",\n    height: \"82.235px\",\n    viewBox: \"0 0 82.235 82.235\",\n    style: {\n      enableBackground: \"new 0 0 82.235 82.235\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgKeywordResearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/keyword-research.27e549d5.svg\";\nexport { ForwardRef as ReactComponent };","import * as Icons from 'grommet-icons';\nimport { Box, Button } from 'grommet'\nimport React, { useRef, useEffect, useState, Ref } from 'react'\nimport { PaperEntry } from '../redux/state/overview'\nimport {ReactComponent as KeywordIcon} from './keyword-research.svg';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport * as d3 from 'd3'\n\ninterface Props {\n    histories: PaperEntry[][]\n    historiesDiff: {type: string, keywords?: string[], papers?: PaperEntry[]}[]\n    offsetHeight: number\n    svgWidth: number\n    cellHeight: number\n    onSelectHistory: (historyIndex: number) => any\n    numHistories: number\n    hoveredEntry: PaperEntry | null\n    setHoveredEntry: (entry: PaperEntry) => any\n}\n\ninterface HistoryLine {\n    doi: string\n    fromIndex: number\n    toIndex: number\n}\n\nfunction translate(x: number, y: number) {\n    return `translate(${x}, ${y})`\n}\n\nconst HistoryLink: React.FC<Props> = ({\n    histories,\n    historiesDiff,\n    offsetHeight,\n    cellHeight,\n    svgWidth,\n    numHistories,\n    hoveredEntry,\n    setHoveredEntry,\n    onSelectHistory,\n}) => {\n    const svgHeight: number = cellHeight * 30\n    const [prevHistoryLength, setPrevHistoryLength] = useState<number>(0)\n    const root = useRef<HTMLDivElement>(null)\n    const topk: number = 10;\n\n    useEffect(() => {\n        // Init\n\n        let _root = d3\n            .select(root.current)\n            .select('.root-svg')\n            .select('.history-content')\n    }, [])\n\n    /*\n        If the length of the histories change,\n        then move every existing elements to the left\n        and add new group at the end of the svg.\n    */\n    useEffect(() => {\n        if (histories.length !== prevHistoryLength) {\n            console.log(histories)\n            console.log(numHistories)\n            // update\n            const _root = d3\n                .select(root.current)\n                .select('.root-svg')\n                .select('.history-content')\n            // Update previous history length\n            setPrevHistoryLength(histories.length)\n\n            if (histories.length === 1) {\n                const _lineData: HistoryLine[] = []\n                const _newHistory = histories[histories.length - 1].slice(0, 50)\n                const topKDois: string[] = _newHistory.slice(0, topk).map((d) => d.doi)\n\n                const newHistory = _root.append('g').classed('hg0', true)\n                newHistory\n                    .selectAll('.node')\n                    .data(_lineData)\n                    .join('circle')\n                    .classed('node', true)\n                    .attr('cx', svgWidth)\n                    .attr('cy', (d: HistoryLine, i: number) => {\n                        return (i + 0.5) * cellHeight\n                    })\n                    .attr('r', 3)\n                    .attr('opacity', (d: HistoryLine) => {\n                        if (topKDois.includes(d.doi)) {\n                            return 0.7\n                        } else {\n                            return 0.1\n                        }\n                    })\n            } else if (histories.length > 1) {\n                const _lineData: HistoryLine[] = []\n                const _newHistory = histories[histories.length - 1].slice(0, 50)\n                const topKDois: string[] = _newHistory.slice(0, topk).map((d) => d.doi)\n                const _prevHistory = histories[histories.length - 2].slice(\n                    0,\n                    50\n                )\n                // move existing elements to the left\n                for (let n = numHistories - 1; n >= 0; n--) {\n                    console.log('hg' + n)\n                    _root\n                        .selectAll('.hg' + n)\n                        .classed('hg' + n, false)\n                        .classed('hg' + (n + 1), true)\n                }\n\n                _root\n                    .transition()\n                    .duration(1000)\n                    .selectAll('.parallel')\n                    .attr('stroke', (d: any) => {\n                        if (topKDois.includes(d.doi)) {\n                            return d3.schemeSet1[3]\n                        } else {\n                            return d3.schemeSet1[8]\n                        }\n                    })\n                    .attr('opacity', (d: any) => {\n                        if (topKDois.includes(d.doi)) {\n                            return 0.7\n                        } else {\n                            return 0.1\n                        }\n                    })\n\n                _root\n                    .transition()\n                    .duration(1000)\n                    .selectAll('.node')\n                    .attr('opacity', (d: any) => {\n                        if (topKDois.includes(d.doi)) {\n                            return 0.7\n                        } else {\n                            return 0.1\n                        }\n                    })\n                // add new elment\n\n                _newHistory.forEach((te, ti) => {\n                    let fi = _prevHistory.findIndex((fe) => fe.doi === te.doi)\n                    _lineData.push({\n                        fromIndex: fi,\n                        toIndex: ti,\n                        doi: te.doi,\n                    })\n                })\n                const newHistory = _root.append('g').classed('hg0', true)\n\n                newHistory\n                    .selectAll('.parallel')\n                    .data(_lineData)\n                    .join('line')\n                    .classed('history', true)\n                    .classed('parallel', true)\n                    .attr(\n                        'x1',\n                        (d: HistoryLine) =>\n                            d.fromIndex >= 0 ? svgWidth : svgWidth * 1.19\n                        //d.fromIndex >= 0 ? 0 : svgWidth * (0.95)\n                    )\n                    .attr('y1', (d: HistoryLine) =>\n                        d.fromIndex >= 0\n                            ? (d.fromIndex + 0.5) * cellHeight\n                            : (d.toIndex + 0.5) * cellHeight\n                    )\n                    .attr('x2', svgWidth + svgWidth / 5)\n                    .attr(\n                        'y2',\n                        (d: HistoryLine) => (d.toIndex + 0.5) * cellHeight\n                    )\n                    .attr('stroke', (d) => {\n                        if (topKDois.includes(d.doi)) {\n                            return d3.schemeSet1[3]\n                        } else {\n                            return d3.schemeSet1[8]\n                        }\n                    })\n                    .attr('stroke-width', 3) //cellHeight * 0.6)\n                    .attr('stroke-linecap', 'round')\n                    .attr('opacity', (d) => {\n                        if (topKDois.includes(d.doi)) {\n                            return 0.7\n                        } else {\n                            return 0.1\n                        }\n                    })\n\n                newHistory\n                    .selectAll('.node')\n                    .data(_lineData)\n                    .join('circle')\n                    .classed('node', true)\n                    .attr('cx', svgWidth + svgWidth / 5)\n                    .attr('cy', (d: HistoryLine, i: number) => {\n                        return (i + 0.5) * cellHeight\n                    })\n                    .attr('r', 3)\n                    .attr('opacity', (d: HistoryLine) => {\n                        if (topKDois.includes(d.doi)) {\n                            return 0.7\n                        } else {\n                            return 0.1\n                        }\n                    })\n\n                for (let n = 0; n <= numHistories; n++) {\n                    _root\n                        .selectAll('.hg' + n)\n                        .transition()\n                        .duration(1000)\n                        .attr(\n                            'transform',\n                            translate((-svgWidth / 5) * (n + 1), 0)\n                        )\n                }\n\n                _root.selectAll('.hg5').remove()\n            }\n        }\n    }, [histories])\n\n    useEffect(() => {\n        //console.log('hover')\n\n            const topKDois: string[] = histories[histories.length - 1].slice(0, topk).map(d => d.doi)\n            const _root = d3\n                .select(root.current)\n                .select('.root-svg')\n                .select('.history-content')\n\n            _root\n                .selectAll('.hovered')\n                .classed('hovered', false)\n                .classed('unhovered', true)\n                .attr('stroke-width', 3)\n                .attr('opacity', (d: any) => {\n                    if (topKDois.includes(d.doi)) {\n                        return 0.7\n                    } else {\n                        return 0.1\n                    }\n                })\n                \n        if (hoveredEntry !== null) {\n            _root\n                .selectAll('.parallel')\n                .filter((d: any) => d.doi == hoveredEntry.doi)\n                .classed('hovered', true)\n                .attr('stroke-width', cellHeight)\n                .attr('opacity', 0.9)\n        }\n    }, [hoveredEntry])\n\n    //    History 버튼 눌렸을 때 애니메이션 만들기용 Effect\n    //    useEffect(() => {\n    //\n    //    }, [])\n\n    return (\n        <div ref={root} style={{ width: svgWidth }}>\n            <div\n                className={'history-header'}\n                style={{ width: svgWidth, height: offsetHeight, display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n                {[...historiesDiff.slice(-numHistories)].map((diff, index, nodes) => {\n                    const baseIndex = historiesDiff.indexOf(nodes[0]);\n                    const restore = () => onSelectHistory(baseIndex + index);\n                    return (\n                        <div\n                            style={{\n                                width: svgWidth / numHistories,\n                                height: offsetHeight,\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            {\n                                diff.type === \"+K\" ? (\n\n                                    <Popup \n                                        trigger={\n                                            <KeywordIcon style={{fill: \"green\", width: 24, height: 24 }}/>\n                                        }\n                                        on={[\"hover\"]}\n                                    >\n                                        Added a keyword: {diff.keywords?.join(', ') || ''}\n                                        <br />\n                                        {/* {baseIndex + index > 0 && <Button onClick={restore} size=\"small\" label=\"revert\" />} */}\n                                    </Popup>\n\n                                ) : diff.type === \"-K\" ? (\n                                    <Popup \n                                        trigger={\n                                            <KeywordIcon style={{fill: \"red\", width: 24, height: 24 }}/>\n                                        }\n                                        on={[\"hover\"]}\n                                    >\n                                        Deleted a keyword: {diff.keywords?.join(', ') || ''}\n                                        <br />\n                                        {/* {baseIndex + index > 0 && <Button onClick={restore} size=\"small\" label=\"revert\" />} */}\n                                    </Popup>\n\n                                ) : diff.type === \"+S\" ? (\n                                    <Popup \n                                        trigger={\n                                            <div>\n                                                <Icons.DocumentText color=\"green\" />\n                                            </div>\n                                        }\n                                        on={[\"hover\"]}\n                                    >\n                                        Added a paper: {diff.papers?.map(p => p.title).join(', ') || ''}\n                                        <br />\n                                        {/* {baseIndex + index > 0 && <Button onClick={restore} size=\"small\" label=\"revert\" />} */}\n                                    </Popup>\n\n                                ) : diff.type === \"-S\" ? (\n                                    <Popup \n                                        trigger={\n                                            <div>\n                                                <Icons.DocumentText color=\"red\" />\n                                            </div>\n                                        }\n                                        on={[\"hover\"]}\n                                    >\n                                        Deleted a paper: {diff.papers?.map(p => p.title).join(', ') || ''}\n                                        <br />\n                                        {/* {baseIndex + index > 0 && <Button onClick={restore} size=\"small\" label=\"revert\" />} */}\n                                    </Popup>\n\n                                ) : diff.type === \"CW\" ? (\n                                    <Popup \n                                        trigger={\n                                            <div>\n                                                <Icons.Calculator color=\"brown\" />\n                                            </div>\n                                            }\n                                            on={[\"hover\"]}\n                                        >\n                                            Changed weight or filter\n                                            <br />\n                                            {/* {baseIndex + index > 0 && <Button onClick={restore} size=\"small\" label=\"revert\" />} */}\n                                        </Popup>\n\n                                    ) : <div />\n                            }\n                        </div>\n                    )\n                })}\n            </div>\n            <svg className=\"root-svg\" height={svgHeight} width={svgWidth}>\n                <g\n                    className={'history-content'}\n                    height={svgHeight}\n                    width={svgWidth}\n                ></g>\n            </svg>\n        </div>\n    )\n}\n\nexport default HistoryLink\n","import * as d3 from \"d3\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\n\ninterface Props {\n  similarities: number[];\n  maxOfSum: number;\n  color: readonly string[];\n}\n\nconst SimilaritiesBar: React.FC<Props> = ({ similarities, maxOfSum, color }) => {\n  similarities = similarities.map(sim => Math.abs(sim));\n  const container = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number | null>(null);\n  const [height, setHeight] = useState<number | null>(null);\n  useLayoutEffect(() => {\n    if (container.current && (!width || !height)) {\n      setWidth(container.current.getBoundingClientRect().width);\n      setHeight(container.current.getBoundingClientRect().height);\n    }\n  });\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"start\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      ref={container}\n    >\n      {width &&\n        height &&\n        similarities.map((sim, i) => (\n          <div\n            style={{\n              marginTop: height * 0.25,\n              height: height * 0.5,\n              width: (sim / maxOfSum) * width * 0.8,\n              backgroundColor: color[Math.min(color.length-1, i)],\n            }}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default SimilaritiesBar;\n","import { Layer, Table, TableBody, TableCell, TableRow } from \"grommet\";\nimport React, { useState } from \"react\";\nimport { PaperEntry } from \"../redux/state/overview\";\n\ninterface Props {\n  onMouseOver: any;\n  onMouseOut: any;\n  onClick: any;\n  style: any;\n  entry: PaperEntry;\n}\n\nconst TitleBox: React.FC<Props> = ({ entry, onMouseOver, onMouseOut, onClick, style }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n      onClick={() => {\n        // setShow(true);\n        onClick();\n      }}\n      style={{\n        ...style,\n        textOverflow: \"ellipsis\",\n        overflow: \"hidden\",\n      }}\n    >\n      <strong\n        style={{\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        {entry.title}\n      </strong>\n      {show && (\n        <Layer\n          onEsc={() => setShow(false)}\n          onClickOutside={() => setShow(false)}\n        >\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">Title</TableCell>\n                <TableCell>{entry.title}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Year</TableCell>\n                <TableCell>{entry.year}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Abstract</TableCell>\n                <TableCell>{entry.abstract}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Layer>\n      )}\n    </div>\n  );\n};\n\nexport default TitleBox;\n","import { Box, Button, Grid } from \"grommet\";\nimport React, { useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\n\ninterface Props {\n  onClose: () => any;\n}\n\nconst AdjustWeightModal: React.FC<Props> = ({ onClose }) => {\n  const [filter, setFilter] = useState(\n    useRootSelector(\n      (state) =>\n        state.overview.filter || {\n          year: { from: 1980, to: 2020 },\n          authors: [],\n        }\n    )\n  );\n  const dispatch = useThunkDispatch();\n  return (\n    <Box direction=\"column\" pad=\"medium\">\n      <Grid columns={[\"1fr\", \"1fr\"]} gap=\"small\">\n\n        <div>Year From</div>\n        <input\n          type=\"number\"\n          value={filter!.year.from}\n          onChange={(e) =>\n            setFilter({\n              ...filter,\n              year: {\n                ...filter!.year,\n                from: +e.target.value,\n              },\n            })\n          }\n        />\n\n        <div>Year To</div>\n        <input\n          type=\"number\"\n          value={filter!.year.to}\n          onChange={(e) =>\n            setFilter({\n              ...filter,\n              year: {\n                ...filter!.year,\n                to: +e.target.value,\n              },\n            })\n          }\n        />\n\n      </Grid>\n      <Box fill={true} justify=\"center\" margin={{ top: \"small\" }}>\n        <Button\n          primary\n          color=\"dark-2\"\n          label=\"Apply\"\n          onClick={() => {\n            dispatch(actionOverview.setFilter(filter));\n            onClose();\n          }}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default AdjustWeightModal;\n","import * as Icons from \"grommet-icons\";\nimport * as d3 from \"d3\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Grid,\n  Heading,\n  Layer,\n  Stack,\n  Text,\n} from \"grommet\";\nimport React, { useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport {\n  setHoveredEntry as _setHoveredEntry,\n  setSelectedEntry as _setSelectedEntry,\n  useThunkDispatch,\n} from \"../redux/action/root-action\";\nimport { PaperEntry } from \"../redux/state/overview\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport AdjustWeightModal from \"./AdjustWeightModal\";\nimport HistoryLink from \"./HistoryLinkRev\";\nimport SimilaritiesBar from \"./SimilaritiesBar\";\nimport TitleBox from \"./TitleBox\";\nimport AdjustFilterModal from \"./AdjustFilterModal\";\n\nconst PapersTabularView: React.FC = () => {\n  const histories = useRootSelector((state) => [\n    ...state.overview.histories,\n    state.overview,\n  ]);\n  const historiesDiff = histories\n    .map((history, i) => {\n      if (i === 0) {\n        return { type: \"undefined\" };\n      }\n      const prevHistory = histories[i - 1];\n      if (history.keywords.length > prevHistory.keywords.length) {\n        return {\n          type: \"+K\",\n          keywords: history.keywords.filter(\n            (keyword) => !prevHistory.keywords.includes(keyword)\n          ),\n        };\n      }\n      if (history.keywords.length < prevHistory.keywords.length) {\n        return {\n          type: \"-K\",\n          keywords: prevHistory.keywords.filter(\n            (keyword) => !history.keywords.includes(keyword)\n          ),\n        };\n      }\n      if (history.seedPapers.length > prevHistory.seedPapers.length) {\n        return {\n          type: \"+S\",\n          papers: history.seedPapers.filter(\n            (paper) =>\n              !prevHistory.seedPapers.map((d) => d.doi).includes(paper.doi)\n          ),\n        };\n      }\n      if (history.seedPapers.length < prevHistory.seedPapers.length) {\n        return {\n          type: \"-S\",\n          papers: prevHistory.seedPapers.filter(\n            (paper) => !history.seedPapers.map((d) => d.doi).includes(paper.doi)\n          ),\n        };\n      }\n      return {\n        type: \"CW\",\n      };\n    })\n    .slice(1);\n  const numHistories = 5;\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const keywords = useRootSelector((state) => state.overview.keywords);\n  const forceAllKeywords = useRootSelector((state) => state.overview.forceAllKeywords);\n  const paperEntries = useRootSelector((state) => state.overview.paperEntriesToShow)\n  const markedPapers = useRootSelector((state) => state.overview.markedPapers);\n  const weights = useRootSelector((state) => state.overview.weights);\n  const emptyWeights = {} as any;\n  Object.entries(weights).forEach(([field, weight]) => {\n    emptyWeights[field] = {\n      ...weight,\n      maxVal: 0,\n    };\n  });\n  const weightsHash = `${weights.recentlyPublished.weight}:${weights.citation.weight}:${weights.keywordSimilarity.weight}:${weights.seedPaperSimilarity.weight}:${weights.referencedBySeedPapers.weight}:${weights.referencesSeedPapers.weight}`;\n\n  const hoveredEntry = useRootSelector((state) => state.ui.hoveredEntry);\n  const setHoveredEntry = (entry: PaperEntry | null) => {\n    if (hoveredEntry?.doi !== entry?.doi) {\n      dispatch(_setHoveredEntry(entry));\n    }\n  };\n\n  const selectedEntry = useRootSelector((state) => state.ui.selectedEntry);\n  const setSelectedEntry = (entry: PaperEntry) => {\n    if (selectedEntry?.doi !== entry.doi) {\n      dispatch(_setSelectedEntry(entry));\n    }\n  };\n\n  const dispatch = useThunkDispatch();\n  const [showWeightModal, setShowWeightModal] = useState(false);\n  const [showFilterModal, setShowFilterModal] = useState(false);\n\n  return (\n    <Card\n      fill={true}\n      background=\"white\"\n      overflow={{ vertical: \"scroll\" }}\n      className=\"styled-scroll\"\n    >\n      <CardHeader pad=\"small\">\n        <Box direction=\"row\" gap=\"small\" align=\"baseline\">\n          <Heading level=\"4\">Papers</Heading>\n\n          {/* <Button\n            color=\"blue\"\n            onClick={() => {\n              setShowWeightModal(true);\n            }}\n          >\n            Adjust weight\n          </Button>\n          {showWeightModal && (\n            <Layer\n              onEsc={() => setShowWeightModal(false)}\n              onClickOutside={() => setShowWeightModal(false)}\n            >\n              <AdjustWeightModal onClose={() => setShowWeightModal(false)} />\n            </Layer>\n          )} */}\n\n          <Button\n            color=\"blue\"\n            onClick={() => {\n              setShowFilterModal(true);\n            }}\n          >\n            Filter\n          </Button>\n          {showFilterModal && (\n            <Layer\n              onEsc={() => setShowFilterModal(false)}\n              onClickOutside={() => setShowFilterModal(false)}\n            >\n              <AdjustFilterModal onClose={() => setShowFilterModal(false)} />\n            </Layer>\n          )}\n        </Box>\n      </CardHeader>\n      <CardBody pad=\"small\" gap=\"small\">\n        {histories.length > 1 ? (\n          <Grid columns={[\"auto\", \"1fr\"]} fill={true}>\n            <HistoryLink\n              histories={histories.map((history) => history.paperEntriesToShow)}\n              historiesDiff={historiesDiff}\n              onSelectHistory={(historyIndex: number) => {\n                dispatch(actionOverview.selectHistory(histories[historyIndex]));\n              }}\n              offsetHeight={50}\n              cellHeight={20}\n              svgWidth={35 * numHistories}\n              numHistories={numHistories}\n              hoveredEntry={hoveredEntry}\n              setHoveredEntry={setHoveredEntry}\n            />\n            <div style={{ height: \"100%\" }}>\n              <Grid\n                fill={true}\n                rows={[\"50px\", ...paperEntries.map((_) => \"20px\")]}\n                columns={[\n                  \"auto\",\n                  \"4fr\",\n                  \"auto\",\n                  `${Math.abs(weights.recentlyPublished.weight)}fr`,\n                  `${Math.abs(weights.citation.weight)}fr`,\n                  `${Math.abs(weights.keywordSimilarity.weight)}fr`,\n                  `${Math.abs(weights.seedPaperSimilarity.weight)}fr`,\n                  `${Math.abs(weights.referencedBySeedPapers.weight)}fr`,\n                  `${Math.abs(weights.referencesSeedPapers.weight)}fr`,\n                ]}\n              >\n                <div>Rank</div>\n                <div style={{ paddingLeft: 5, paddingRight: 5 }}>Title</div>\n                <div style={{ paddingLeft: 5, paddingRight: 5 }}>\n                  Conference\n                </div>\n                <div\n                  style={{\n                    paddingLeft: 5,\n                    paddingRight: 5,\n                    backgroundColor:\n                      weights.mode === \"year\"\n                        ? \"rgba(0, 255, 0, 0.1)\"\n                        : weights.mode === \"year-ascending\"\n                        ? \"rgba(255, 0, 0, 0.1)\"\n                        : \"white\",\n                  }}\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setWeights({\n                        ...weights,\n                        mode:\n                          weights.mode === \"year\"\n                            ? \"year-ascending\"\n                            : weights.mode === \"year-ascending\"\n                            ? null\n                            : \"year\",\n                      })\n                    );\n                  }}\n                >\n                  Year\n                </div>\n                <div\n                  style={{\n                    paddingLeft: 5,\n                    paddingRight: 5,\n                    backgroundColor:\n                      weights.mode === \"citation\"\n                        ? \"rgba(0, 255, 0, 0.1)\"\n                        : \"white\",\n                  }}\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setWeights({\n                        ...weights,\n                        mode: weights.mode === \"citation\" ? null : \"citation\",\n                      })\n                    );\n                  }}\n                >\n                  Cited By\n                </div>\n                <div\n                  style={{\n                    paddingLeft: 5,\n                    paddingRight: 5,\n                    backgroundColor:\n                      weights.mode === \"keyword\"\n                        ? \"rgba(0, 255, 0, 0.1)\"\n                        : \"white\",\n                  }}\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setWeights({\n                        ...weights,\n                        mode: weights.mode === \"keyword\" ? null : \"keyword\",\n                      })\n                    );\n                  }}\n                >\n                  Keyword Similarity\n                </div>\n                <div\n                  style={{\n                    paddingLeft: 5,\n                    paddingRight: 5,\n                    backgroundColor:\n                      weights.mode === \"seed\"\n                        ? \"rgba(0, 255, 0, 0.1)\"\n                        : \"white\",\n                  }}\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setWeights({\n                        ...weights,\n                        mode: weights.mode === \"seed\" ? null : \"seed\",\n                      })\n                    );\n                  }}\n                >\n                  Seed Paper Similarity\n                </div>\n                <div\n                  style={{\n                    paddingLeft: 5,\n                    paddingRight: 5,\n                    backgroundColor:\n                      weights.mode === \"referenced-by-seed\"\n                        ? \"rgba(0, 255, 0, 0.1)\"\n                        : \"white\",\n                  }}\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setWeights({\n                        ...weights,\n                        mode:\n                          weights.mode === \"referenced-by-seed\"\n                            ? null\n                            : \"referenced-by-seed\",\n                      })\n                    );\n                  }}\n                >\n                  Cited by Seed Papers\n                </div>\n                <div\n                  style={{\n                    paddingLeft: 5,\n                    paddingRight: 5,\n                    backgroundColor:\n                      weights.mode === \"references-seed\"\n                        ? \"rgba(0, 255, 0, 0.1)\"\n                        : \"white\",\n                  }}\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setWeights({\n                        ...weights,\n                        mode:\n                          weights.mode === \"references-seed\"\n                            ? null\n                            : \"references-seed\",\n                      })\n                    );\n                  }}\n                >\n                  References Seed Papers\n                </div>\n                {paperEntries &&\n                  paperEntries.map((entry, i) => (\n                    <>\n                      <div\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          paddingLeft: 5,\n                          paddingRight: 5,\n                          textAlign: \"center\",\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                      >\n                        {i + 1}\n                      </div>\n                      <TitleBox\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                        entry={entry}\n                      />\n                      <div\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          paddingLeft: 5,\n                          paddingRight: 5,\n                          textAlign: \"center\",\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                      >\n                        {entry.conference}\n                      </div>\n                      <div\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          paddingLeft: 5,\n                          paddingRight: 5,\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                      >\n                        <Stack fill={true} anchor=\"left\">\n                          <SimilaritiesBar\n                            key={weightsHash}\n                            similarities={[entry.recentlyPublished]}\n                            maxOfSum={1}\n                            color={[d3.schemeReds[9][1]]}\n                          />\n                          <Text size=\"xsmall\">{entry.year}</Text>\n                        </Stack>\n                      </div>\n                      <div\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          paddingLeft: 5,\n                          paddingRight: 5,\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                      >\n                        <Stack fill={true} anchor=\"left\">\n                          <SimilaritiesBar\n                            key={weightsHash}\n                            similarities={[entry.citation]}\n                            maxOfSum={1}\n                            color={[d3.schemeReds[9][1]]}\n                          />\n                          <Text size=\"xsmall\">{entry.numReferenced}</Text>\n                        </Stack>\n                      </div>\n                      <div\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          paddingLeft: 5,\n                          paddingRight: 5,\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                      >\n                        <SimilaritiesBar\n                          key={weightsHash}\n                          similarities={entry.keywordSims}\n                          maxOfSum={1}\n                          color={d3.schemeTableau10}\n                        />\n                      </div>\n                      <div\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          paddingLeft: 5,\n                          paddingRight: 5,\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                      >\n                        <SimilaritiesBar\n                          key={weightsHash}\n                          similarities={entry.seedPaperSims}\n                          maxOfSum={1}\n                          color={d3.schemePurples[9].slice(3)}\n                        />\n                      </div>\n                      <div\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          paddingLeft: 5,\n                          paddingRight: 5,\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                      >\n                        <SimilaritiesBar\n                          key={weightsHash}\n                          similarities={entry.referencedBySeedPapers}\n                          maxOfSum={1}\n                          color={d3.schemePurples[9].slice(3)}\n                        />\n                      </div>\n                      <div\n                        onMouseOver={() => setHoveredEntry(entry)}\n                        onMouseOut={() => setHoveredEntry(null)}\n                        onClick={() => setSelectedEntry(entry)}\n                        style={{\n                          paddingLeft: 5,\n                          paddingRight: 5,\n                          backgroundColor:\n                            hoveredEntry?.doi === entry.doi\n                              ? \"rgba(0,0,255,0.1)\"\n                              : \"white\",\n                        }}\n                      >\n                        <SimilaritiesBar\n                          key={weightsHash}\n                          similarities={entry.referencesSeedPapers}\n                          maxOfSum={1}\n                          color={d3.schemePurples[9].slice(3)}\n                        />\n                      </div>\n                    </>\n                  ))}\n              </Grid>\n            </div>\n          </Grid>\n        ) : (\n          <Text>Enter search keywords on the left</Text>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default PapersTabularView;\n","import * as d3 from \"d3\";\nimport React from \"react\";\n\nconst KeywordsBarChart = ({\n  svgWidth,\n  userInputKeywords,\n  wordCounts,\n  onClick,\n}) => {\n  const maxCount = wordCounts.reduce((a, b) => Math.max(a, b.count), 0);\n  let defaultColor = \"rgba(128, 128, 128, 0.3)\"\n  let barHeight = 25\n  let padding = 5\n  let textMargin = 15\n  return (\n    <svg width={svgWidth} height={wordCounts.length * barHeight}>\n      {wordCounts.map(({ word, count, isSelected }, i) => {\n        return (\n        <>\n          <rect\n            x={svgWidth / 2}\n            y={i * barHeight}\n            onClick={() => onClick(word)}\n            width={(count / maxCount) * svgWidth * 0.4}\n            height={barHeight - padding}\n            fill={\n              isSelected\n                ? d3.schemeTableau10[\n                    Math.min(9, isSelected.index)\n                  ]\n                : defaultColor\n            }\n          />\n          <text x={0} y={i * barHeight + textMargin}>\n            {word}\n          </text>\n        </>\n      )})}\n    </svg>\n  );\n};\n\nexport default KeywordsBarChart;\n","import React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { PaperEntry } from \"../redux/state/overview\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport { extractKeywords } from \"../utils\";\nimport KeywordsBarChart from \"./KeywordsBarChart\";\n\ninterface Props {\n  targetPapers: PaperEntry[];\n}\n\nconst KeywordsBarChartContainer: React.FC<Props> = ({ targetPapers }) => {\n  const dispatch = useThunkDispatch();\n  const userInputKeywords = useRootSelector((state) => state.overview.keywords);\n  const wordCounts = useMemo(() => {\n    const count = {} as { [word: string]: number };\n    targetPapers.forEach((entry) => {\n      extractKeywords(entry.title + \" \" + entry.abstract).forEach((word) =>\n        count[word] ? (count[word] += 1) : (count[word] = 1)\n      );\n      entry.keywords\n        .map((word) => word.toLocaleLowerCase().split(\" \"))\n        .reduce((a, b) => a.concat(b), [])\n        .forEach((word) =>\n          count[word] ? (count[word] += 1) : (count[word] = 1)\n        );\n    });\n    return Object.entries(count)\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, 50)\n      .map(([word, count]) => ({\n        word,\n        count,\n        isSelected: userInputKeywords\n          .map((keyword, index) => ({ keyword, index }))\n          .find(({ keyword, index }) => keyword.split(\" \").includes(word)),\n      }));\n  }, [userInputKeywords, targetPapers]);\n  const container = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number | null>(null);\n  useLayoutEffect(() => {\n    if (container.current && !width) {\n      setWidth(container.current.getBoundingClientRect().width);\n    }\n  });\n  return (\n    <div\n      className=\"styled-scroll\"\n      style={{ height: \"100%\", width: \"100%\", overflowY: \"scroll\" }}\n      ref={container}\n    >\n      {width && (\n        <KeywordsBarChart\n          svgWidth={width * 0.9}\n          userInputKeywords={userInputKeywords}\n          wordCounts={wordCounts}\n          onClick={(keyword: string) => {\n            if (userInputKeywords.includes(keyword.toLocaleLowerCase())) {\n              dispatch(\n                actionOverview.setKeywords(\n                  userInputKeywords.filter((k) => k !== keyword)\n                )\n              );\n            } else {\n              dispatch(\n                actionOverview.setKeywords([...userInputKeywords, keyword])\n              );\n            }\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default KeywordsBarChartContainer;\n","import * as d3 from \"d3\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CheckBox,\n  Form,\n  Grid,\n  Heading,\n  List,\n  RadioButtonGroup,\n  Text,\n  TextInput,\n} from \"grommet\";\nimport * as Icons from \"grommet-icons\";\nimport React, { useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport KeywordsBarChartContainer from \"./KeywordsBarChartContainer\";\n\nconst SearchBox: React.FC = () => {\n  const [currentKeyword, setCurrentKeyword] = useState(\"\");\n  const keywords = useRootSelector((state) => state.overview.keywords);\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const paperEntries = useRootSelector((state) =>\n    state.overview.paperEntries.slice(0, 30)\n  );\n  const [targetPaperMode, setTargetPaperMode] = useState(\"from search result\");\n  const forceAllKeywords = useRootSelector(\n    (state) => state.overview.forceAllKeywords\n  );\n  const dispatch = useThunkDispatch();\n\n  return (\n    <Card height=\"100%\" width=\"100%\" background=\"white\">\n      <CardHeader pad=\"small\">\n        <Heading level=\"4\">Search Box</Heading>\n      </CardHeader>\n      <CardBody pad=\"small\" gap=\"small\">\n        <Box fill={true}>\n          <Grid fill={true} rows={[\"2fr\", \"5fr\"]}>\n            <div style={{ overflowY: \"scroll\" }} className=\"styled-scroll\">\n              <Box direction=\"row\" align=\"baseline\" gap=\"small\">\n                <Heading level=\"5\">Keywords</Heading>\n                <Button\n                  color=\"blue\"\n                  onClick={() => {\n                    dispatch(actionOverview.setKeywords([]));\n                  }}\n                >\n                  clear\n                </Button>\n              </Box>\n              <Box direction=\"row\" align=\"center\" gap=\"small\">\n                <CheckBox\n                  size={10}\n                  checked={forceAllKeywords}\n                  onChange={(e) =>\n                    dispatch(\n                      actionOverview.setForceAllKeywords(!forceAllKeywords)\n                    )\n                  }\n                />\n                Should contain all keywords\n              </Box>\n              <Form\n                onSubmit={() => {\n                  if (!keywords.includes(currentKeyword.toLocaleLowerCase())) {\n                    dispatch(\n                      actionOverview.setKeywords([...keywords, currentKeyword])\n                    );\n                  }\n                  setCurrentKeyword(\"\");\n                }}\n              >\n                <TextInput\n                  value={currentKeyword}\n                  onChange={(e) => setCurrentKeyword(e.target.value)}\n                />\n                <List\n                  data={keywords.map((keyword) => ({ entry: keyword }))}\n                  primaryKey={(item) => item.entry}\n                  pad={{\n                    left: \"small\",\n                    right: \"none\",\n                    top: \"none\",\n                    bottom: \"none\",\n                  }}\n                >\n                  {(item: any, i: number) => (\n                    <Grid\n                      fill={true}\n                      key={item.doi}\n                      columns={[\"auto\", \"1fr\", \"auto\"]}\n                      pad=\"xsmall\"\n                      gap=\"small\"\n                      align=\"center\"\n                    >\n                      <div\n                        style={{\n                          width: 20,\n                          height: 20,\n                          backgroundColor: d3.schemeTableau10[Math.min(i, 9)],\n                        }}\n                      />\n                      <Text size=\"small\">{item.entry}</Text>\n                      <Button\n                        icon={<Icons.Close size=\"small\" />}\n                        hoverIndicator\n                        onClick={() => {\n                          dispatch(\n                            actionOverview.setKeywords(\n                              keywords.filter((k) => k !== item.entry)\n                            )\n                          );\n                        }}\n                      />\n                    </Grid>\n                  )}\n                </List>\n              </Form>\n            </div>\n            <Box fill={true} pad=\"small\" gap=\"small\" height={{ min: \"0px\" }}>\n              <Heading level=\"5\">Recommended</Heading>\n              <RadioButtonGroup\n                margin={{ bottom: \"small\" }}\n                name=\"target paper\"\n                options={[\"from search result\", \"from seed papers\"]}\n                value={targetPaperMode}\n                onChange={(event: any) =>\n                  setTargetPaperMode(event.target.value)\n                }\n              />\n              <KeywordsBarChartContainer\n                targetPapers={\n                  targetPaperMode === \"from search result\"\n                    ? paperEntries\n                    : seedPapers\n                }\n              />\n            </Box>\n          </Grid>\n        </Box>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SearchBox;\n","import * as d3 from \"d3\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Heading,\n  RadioButtonGroup,\n  Form,\n  List,\n  Grid,\n  Text,\n} from \"grommet\";\nimport * as Icons from \"grommet-icons\";\nimport React, { useState } from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport KeywordsBarChartContainer from \"./KeywordsBarChartContainer\";\nimport SeedPapersScatterplotContainer from \"./SeedPapersScatterplotContainer\";\n\nconst SummaryView: React.FC = () => {\n  const seedPapers = useRootSelector((state) => state.overview.seedPapers);\n  const dispatch = useThunkDispatch();\n  return (\n    <Card height=\"100%\" width=\"100%\" background=\"white\">\n      <CardHeader pad=\"small\">\n        <Box direction=\"row\" align=\"baseline\" gap=\"small\">\n          <Heading level=\"4\">Seed papers</Heading>\n          <Button\n            color=\"blue\"\n            onClick={() => {\n              dispatch(actionOverview.setSeedPapers([]));\n            }}\n          >\n            clear\n          </Button>\n        </Box>\n      </CardHeader>\n      <CardBody>\n        <Form onSubmit={() => {}}>\n          <List\n            data={seedPapers.map((entry) => entry)}\n            primaryKey={(entry) => entry.title}\n            pad={{\n              left: \"small\",\n              right: \"none\",\n              top: \"none\",\n              bottom: \"none\",\n            }}\n          >\n            {(item: any, i: number) => (\n              <Grid\n                fill={true}\n                key={item.doi}\n                columns={[\"auto\", \"1fr\", \"auto\"]}\n                pad=\"xsmall\"\n                gap=\"small\"\n                align=\"center\"\n              >\n                <div\n                  style={{\n                    width: 20,\n                    minWidth: 20,\n                    height: 20,\n                    backgroundColor: d3.schemePurples[9].slice(3)[\n                      Math.min(i, 5)\n                    ],\n                  }}\n                />\n                <Text size=\"small\">{item.title}</Text>\n                <Button\n                  icon={<Icons.Close size=\"small\" />}\n                  hoverIndicator\n                  onClick={() => {\n                    dispatch(\n                      actionOverview.setSeedPapers(\n                        seedPapers.filter((e) => e !== item)\n                      )\n                    );\n                  }}\n                />\n              </Grid>\n            )}\n          </List>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SummaryView;\n","import { Box, Card, Grid } from \"grommet\";\nimport React from \"react\";\nimport { actionOverview } from \"../redux/action/overview-actions\";\nimport { useThunkDispatch } from \"../redux/action/root-action\";\nimport { useRootSelector } from \"../redux/state/root-state\";\nimport CitationRelationshipView from \"./CitationRelationshipView\";\nimport PaperDetailView from \"./PaperDetailView\";\nimport PapersTabularView from \"./PapersTabularView\";\nimport SearchBox from \"./SearchBox\";\nimport SummaryView from \"./SummaryView\";\n\nconst Overview: React.FC = () => {\n  const paperEntries = useRootSelector(state => state.overview.paperEntries)\n  const dispatch = useThunkDispatch();\n  if (!paperEntries.length) {\n    dispatch(actionOverview.getData.thunk())\n  }\n  return (\n    <Grid fill={true} columns={[\"2fr\", \"10fr\", \"2fr\"]}>\n      <Box fill={true}>\n        <SearchBox />\n      </Box>\n      <Box fill={true}>\n        <Grid fill={true} rows={[\"3fr\", \"2fr\"]}>\n          <PapersTabularView />\n          <Box fill={true}>\n            <Grid fill={true} columns={[\"1fr\", \"1fr\"]}>\n              <CitationRelationshipView />\n              <PaperDetailView />\n            </Grid>\n          </Box>\n        </Grid>\n      </Box>\n      <Box fill={true}>\n        <SummaryView />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Overview;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Overview from \"./components/Overview\";\nimport {\n  Header,\n  HeaderName,\n} from \"carbon-components-react/lib/components/UIShell\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <Header aria-label=\"Papers101\">\n        <HeaderName href=\"#\" prefix=\"\">\n          Papers101\n        </HeaderName>\n      </Header>\n      <div style={{ height: \"100%\", marginTop: \"48px\" }}>\n        <Overview />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { getType } from \"typesafe-actions\";\nimport { ReducibleAction, setHoveredEntry, setSelectedEntry } from \"../action/root-action\";\nimport { PaperEntry } from \"../state/overview\";\nimport { UIState } from \"../state/root-state\";\nimport { overviewReducer } from \"./overview-reducers\";\n\nconst defaultUIState: UIState = {\n  hoveredEntry: null,\n  selectedEntry: null,\n}\n\nconst uiReducer = (\n  state: UIState = defaultUIState,\n  action: ReducibleAction\n) => {\n  switch (action.type) {\n    case getType(setHoveredEntry):\n      return {\n        ...state,\n        hoveredEntry: action.payload\n      };\n    case getType(setSelectedEntry):\n      return {\n        ...state,\n        selectedEntry: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  overview: overviewReducer,\n  ui: uiReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { rootReducer } from \"./redux/reducer/root-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { Provider } from \"react-redux\";\nimport { getType } from \"typesafe-actions\";\nimport { setHoveredEntry } from \"./redux/action/root-action\";\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, createLogger({\n    predicate: (getState, action) => action.type !== getType(setHoveredEntry)\n  }))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}